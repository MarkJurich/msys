@c Generated automatically from lang-options.h
@c DO NOT CHANGE THIS FILE MANUALLY!

@table @code
@item --classic-pascal-level-0
@cindex --classic-pascal-level-0
Reject conformant arrays and anything besides ISO-7185 Pascal.
@item --classic-pascal
@cindex --classic-pascal
Reject anything besides ISO-7185 Pascal.
@item --standard-pascal-level-0
@cindex --standard-pascal-level-0
Reject conformant arrays and anything besides ISO-7185 Pascal.
@item --standard-pascal
@cindex --standard-pascal
Reject anything besides ISO-7185 Pascal.
@item --extended-pascal
@cindex --extended-pascal
Reject anything besides ISO-10206 Extended Pascal.
@item --object-pascal
@cindex --object-pascal
Reject anything besides (the implemented parts of) ANSI draft Object Pascal.
@item --borland-pascal
@cindex --borland-pascal
Try to emulate Borland Pascal, version 7.0.
@item --delphi
@cindex --delphi
Try to emulate Borland Pascal, version 7.0, with some Delphi extensions.
@item --pascal-sc
@cindex --pascal-sc
Be strict about the implemented Pascal-SC extensions.
@item --gnu-pascal
@cindex --gnu-pascal
Undo the effect of a previous @samp{--foo-pascal}, @samp{--delphi} or @samp{--pascal-sc} switch.
@item --debug-tree
@cindex --debug-tree
(For GPC developers.) Show the internal representation of a given tree node (name or address).
@item --debug-gpi
@cindex --debug-gpi
(For GPC developers.) Show what is written to and read from GPI files (huge output!).
@item --debug-automake
@cindex --debug-automake
(For GPC developers.) Give additional information about the actions of automake.
@item --debug-source
@cindex --debug-source
Output the source while it is processed.
@item --no-debug-info
@cindex --no-debug-info
Inhibit @samp{-g} options (temporary work-around, this option may disappear in the future).
@item --progress-messages
@cindex --progress-messages
Output source file names and line numbers while compiling.
@item --progress-bar
@cindex --progress-bar
Output number of processed lines while compiling.
@item --autolink
@cindex --autolink
Automatically link object files provided by units/modules or @samp{@{$L ...@}} (default).
@item --no-autolink
@cindex --no-autolink
Do not automatically link object files provided by units/modules/@samp{@{$L ...@}}.
@item --automake
@cindex --automake
Automatically compile changed units/modules/@samp{@{$L ...@}} files and link the object files provided.
@item --no-automake
@cindex --no-automake
Same as @samp{--no-autolink}.
@item --autobuild
@cindex --autobuild
Automatically compile all units/modules/@samp{@{$L ...@}} files and link the object files provided.
@item --no-autobuild
@cindex --no-autobuild
Same as @samp{--no-autolink}.
@item --amtmpfile
@cindex --amtmpfile
(Internal switch used for AutoMake).
@item --extended-syntax
@cindex --extended-syntax
Enable certain @samp{dangerous} features such as ignoring function results, pointer arithmetic or using @samp{CString}s as strings (same as @samp{@{$X+@}}).
@item --no-extended-syntax
@cindex --no-extended-syntax
Disable the dangerous features enabled by @samp{--extended-syntax} (default; same as @samp{@{$X-@}}).
@item --signed-char
@cindex --signed-char
Let @samp{Char} be a signed type.
@item --no-signed-char
@cindex --no-signed-char
Let @samp{Char} be an unsigned type.
@item --unsigned-char
@cindex --unsigned-char
Let @samp{Char} be an unsigned type.
@item --no-unsigned-char
@cindex --no-unsigned-char
Let @samp{Char} be a signed type.
@item --short-circuit
@cindex --short-circuit
Guarantee short-circuit Boolean evaluation (default; same as @samp{@{$B-@}}).
@item --no-short-circuit
@cindex --no-short-circuit
Do not guarantee short-circuit Boolean evaluation (same as @samp{@{$B+@}}).
@item --mixed-comments
@cindex --mixed-comments
Allow comments like @samp{@{ ... *)} as required in ISO Pascal (default in ISO 7185/10206 Pascal mode).
@item --no-mixed-comments
@cindex --no-mixed-comments
Ignore @samp{@{} and @samp{@}} within @samp{(* ... *)} comments and vice versa (default).
@item --nested-comments
@cindex --nested-comments
Allow nested comments like @samp{@{ @{ @} @}} and @samp{(* (* *) *)}.
@item --no-nested-comments
@cindex --no-nested-comments
Do not allow nested comments (default).
@item --delphi-comments
@cindex --delphi-comments
Allow Delphi style @samp{//} comments (default).
@item --no-delphi-comments
@cindex --no-delphi-comments
Do not allow Delphi style @samp{//} comments.
@item --macros
@cindex --macros
Expand macros (default).
@item --no-macros
@cindex --no-macros
Do not expand macros (default with @samp{--borland-pascal} or @samp{--delphi}).
@item --ignore-function-results
@cindex --ignore-function-results
Do not complain when a function is called like a procedure.
@item --no-ignore-function-results
@cindex --no-ignore-function-results
Complain when a function is called like a procedure (default).
@item --borland-char-constants
@cindex --borland-char-constants
Allow for Borland-style character constants like @samp{#27} or @samp{^L} (default).
@item --no-borland-char-constants
@cindex --no-borland-char-constants
Reject Borland-style character constants like @samp{#27} or @samp{^L} (default in ISO 7185/10206 Pascal mode).
@item --truncate-strings
@cindex --truncate-strings
Truncate strings being assigned to other strings of too short capacity..
@item --no-truncate-strings
@cindex --no-truncate-strings
Treat string assignments to other strings of too short capacity as errors..
@item --exact-compare-strings
@cindex --exact-compare-strings
Do not blank-pad strings for comparisons.
@item --no-exact-compare-strings
@cindex --no-exact-compare-strings
Blank-pad strings for comparisons.
@item --double-quoted-strings
@cindex --double-quoted-strings
Allow strings enclosed in "\"..
@item --no-double-quoted-strings
@cindex --no-double-quoted-strings
Do not allow strings enclosed in "\"..
@item --io-checking
@cindex --io-checking
Do automatic run-time checks after I/O operations (same as @samp{@{$I+@}}).
@item --no-io-checking
@cindex --no-io-checking
Do not check I/O operations automatically (same as @samp{@{$I-@}}).
@item --read-base-specifier
@cindex --read-base-specifier
In read statements, allow non-decimal input with @samp{n#} (default).
@item --no-read-base-specifier
@cindex --no-read-base-specifier
In read statements, do not allow non-decimal input with @samp{n#} (default in ISO-7185 Pascal).
@item --read-hex
@cindex --read-hex
In read statements, allow hexadecimal input with @samp{$} (default).
@item --no-read-hex
@cindex --no-read-hex
In read statements, do not allow hexadecimal input with @samp{$} (default in ISO-7185 Pascal).
@item --read-white-space
@cindex --read-white-space
In read statements, require whitespace after numbers.
@item --no-read-white-space
@cindex --no-read-white-space
In read statements, do not require whitespace after numbers (default).
@item --write-clip-strings
@cindex --write-clip-strings
In write statements, truncate strings exceeding their field width (@samp{Write (SomeLongString : 3)}).
@item --no-write-clip-strings
@cindex --no-write-clip-strings
Do not truncate strings exceeding their field width.
@item --write-real-blank
@cindex --write-real-blank
Output a blank in front of positive reals in exponential form (default).
@item --no-write-real-blank
@cindex --no-write-real-blank
Do not output a blank in front of positive reals in exponential form.
@item --write-capital-exponent
@cindex --write-capital-exponent
Write real exponents with a capital @samp{E}.
@item --no-write-capital-exponent
@cindex --no-write-capital-exponent
Write real exponents with a lowercase @samp{e}.
@item --transparent-file-names
@cindex --transparent-file-names
Derive external file names from variable names.
@item --no-transparent-file-names
@cindex --no-transparent-file-names
Do not derive external file names from variable names (default).
@item --field-widths
@cindex --field-widths
Comma-separated list of default field widths for Integer, Real, Boolean, LongInt, LongReal.
@item --no-field-widths
@cindex --no-field-widths
Reset the default field widths.
@item --pedantic
@cindex --pedantic
Reject everything not allowed in some dialect, e.g. redefinition of its keywords.
@item --no-pedantic
@cindex --no-pedantic
Don't give pedantic warnings.
@item --stack-checking
@cindex --stack-checking
Enable stack checking (same as @samp{@{$S+@}}).
@item --no-stack-checking
@cindex --no-stack-checking
Disable stack checking (same as @samp{@{$S-@}}).
@item --typed-address
@cindex --typed-address
Make the result of the address operator typed (same as @samp{@{$T+@}}, default).
@item --no-typed-address
@cindex --no-typed-address
Make the result of the address operator an untyped pointer (same as @samp{@{$T-@}}).
@item --setlimit
@cindex --setlimit
Define the range for @samp{set of Integer} etc..
@item --gpc-main
@cindex --gpc-main
External name for the program's entry point (default: @samp{main}).
@item --interface-only
@cindex --interface-only
Compile only the interface part of a unit/module and exit.
@item --implementation-only
@cindex --implementation-only
Do not produce a GPI file; only compile the implementation part.
@item --executable-file-name
@cindex --executable-file-name
Name for the output file, if specified; otherwise derive from main source file name.
@item --unit-path
@cindex --unit-path
Directories where to look for unit/module sources.
@item --no-unit-path
@cindex --no-unit-path
Forget about directories where to look for unit/module sources.
@item --object-path
@cindex --object-path
Directories where to look for additional object (and source) files.
@item --no-object-path
@cindex --no-object-path
Forget about directories where to look for additional object (and source) files.
@item --executable-path
@cindex --executable-path
Path where to create the executable file.
@item --no-executable-path
@cindex --no-executable-path
Create the executable file in the directory where the main source is (default).
@item --unit-destination-path
@cindex --unit-destination-path
Path where to create object and GPI files of Pascal units.
@item --no-unit-destination-path
@cindex --no-unit-destination-path
Create object and GPI files of Pascal units in the current directory (default).
@item --object-destination-path
@cindex --object-destination-path
Path where to create additional object files (e.g. of C files, not Pascal units).
@item --no-object-destination-path
@cindex --no-object-destination-path
Create additional object files (e.g. of C files, not Pascal units) in the current directory (default).
@item --no-default-paths
@cindex --no-default-paths
Do not add a default path to the unit and object path.
@item --gpi-destination-path
@cindex --gpi-destination-path
(Internal switch used for AutoMake).
@item --uses
@cindex --uses
Add an implicit @samp{uses} clause.
@item --init-modules
@cindex --init-modules
Initialize the named modules in addition to those imported regularly; kind of a kludge.
@item --cidefine
@cindex --cidefine
Define a case-insensitive macro.
@item --csdefine
@cindex --csdefine
Define a case-sensitive macro.
@item --big-endian
@cindex --big-endian
Tell GPC that the system is big-endian (for those targets where it can very).
@item --little-endian
@cindex --little-endian
Tell GPC that the system is little-endian (for those targets where it can very).
@item --print-needed-options
@cindex --print-needed-options
Print the needed options.
@item -Wwarnings
@cindex -Wwarnings
Enable warnings (same as @samp{@{$W+@}}).
@item -Wno-warnings
@cindex -Wno-warnings
Disable warnings (same as @samp{@{$W-@}}).
@item -Wfield-name-problem
@cindex -Wfield-name-problem
Warn about ignored field names in initializers (default).
@item -Wno-field-name-problem
@cindex -Wno-field-name-problem
Do not warn about ignored field names in initializers.
@item -Wobject-directives
@cindex -Wobject-directives
Warn about unimplemented @samp{private}, @samp{protected} and @samp{public} directives (default).
@item -Wno-object-directives
@cindex -Wno-object-directives
Do not warn about unimplemented @samp{private}, @samp{protected} and @samp{public} directives.
@item -Wimplicit-abstract
@cindex -Wimplicit-abstract
Warn if an object type not declared @samp{abstract} contains an abstract method (default).
@item -Wno-implicit-abstract
@cindex -Wno-implicit-abstract
Do not warn if an object type not @samp{declared} abstract contains an abstract method.
@item -Winherited-abstract
@cindex -Winherited-abstract
Warn if an abstract object type inherits from a non-abstract one (default).
@item -Wno-inherited-abstract
@cindex -Wno-inherited-abstract
Do not warn warn if an abstract object type inherits from a non-abstract one.
@item -Wtyped-const
@cindex -Wtyped-const
Warn about misuse of typed constants as initialized variables (default).
@item -Wno-typed-const
@cindex -Wno-typed-const
Do not warn about misuse of typed constants as initialized variables.
@item -Wnear-far
@cindex -Wnear-far
Warn about use of useless @samp{near} or @samp{far} directives (default).
@item -Wno-near-far
@cindex -Wno-near-far
Do not warn about use of useless @samp{near} or @samp{far} directives.
@item -Wunderscore
@cindex -Wunderscore
Warn about double/leading/trailing underscores in identifiers.
@item -Wno-underscore
@cindex -Wno-underscore
Do not warn about double/leading/trailing underscores in identifiers.
@item -Wmixed-comments
@cindex -Wmixed-comments
Warn about mixed comments like @samp{@{ ... *)}.
@item -Wno-mixed-comments
@cindex -Wno-mixed-comments
Do not warn about mixed comments.
@item -Wnested-comments
@cindex -Wnested-comments
Warn about nested comments like @samp{@{ @{ @} @}}.
@item -Wno-nested-comments
@cindex -Wno-nested-comments
Do not warn about nested comments.
@item -Wsemicolon
@cindex -Wsemicolon
Warn about a semicolon after @@samp@{then@}, @@samp@{else@} or @@samp@{do@} (default).
@item -Wno-semicolon
@cindex -Wno-semicolon
Do not warn about a semicolon after @@samp@{then@}, @@samp@{else@} or @@samp@{do@}.
@end table
