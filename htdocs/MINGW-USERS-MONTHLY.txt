To: mingw-users@lists.sourceforge.net
Subject: [mini-FAQ/reminder]

Introduction
============
You receive this message because you are subscribed to the MinGW
mailing list. This is a reminder/mini-FAQ sent once a month. If 
you want to unsubscribe from the mingw-users mail list you can do 
so at http://lists.sourceforge.net/mailman/listinfo/mingw-users.  
Have your password handy (if you can't find it, you'll be offered 
an option to have it mailed to you).


What is MinGW?
==============
MinGW stands for "Minimalist GNU for Windows" and is a development
package (as well as target) which allows you to compile software 
for "native" Windows 32-bit platforms.  Please visit our website 
http://www.mingw.org for more information.


Who authored MinGW? How is it maintained? What is its licensing?
================================================================
MinGW was created by Colin Peters and was placed by him into the 
public domain.  There is no centralized force behind MinGW - it is 
maintained by volunteers and its development directed by the user 
community.  MinGW uses free GNU C/C++ compiler, its core libraries
and headers (Win32 import libraries and header definitions) are in 
public domain and it uses the vendor-supplied runtime library, so
in short, you can use it to develop royalty-free software, either
open- or close-sourced.  For more comprehensive licensing terms,
please visit http://www.mingw.org/licensing.shtml


Can MinGW be used to compile GNU or OpenSource software?
========================================================
The MinGW runtime library adheres to the ANSI C standard and
offers very little POSIX compatibility.  While some packages may
compile "out of the box", many will require porting.  Most GNU
software uses the GNU "configure; make; make install" procedure,
which requires a borne compliant shell, and a handful of UNIX like
utilities.  Some of this functionality is provided by MSYS, 
please see "What is MSYS and why should I use it?" below for
more information.


Can MinGW be used to compile MSVC projects?
===========================================
Because MinGW was specifically created to allow "native" runtimes to
be compiled with GCC, most MSVC projects will compile without change.
However, with many projects there maybe a requirement to modify the 
build procedure.  Tools for automating MSVC project conversion are
available. 

--?AVAILABLE CONVERSION TOOLS HERE?--


What is MSYS and why should I use it?
=====================================
MSYS stands for Minimal SYStem and is a shell environment created
for use with the MinGW package.  MSYS provides the ability to 
execute configure scripts.  It also includes some *nix utilities
such as the vi editor.

For further details on MSYS please visit:

http://www.mingw.org/msys.shtml


Support
=======
The main source of user information can be found at MinGW's website
at http://www.mingw.org/.  There, you can find general information, 
download and installation instructions, links to ported software, 
FAQ, history and news, etc.  

The MinGW mailing list is a place to ask questions, discuss MinGW
related issues and announce availability of software.  Before 
posting questions, please make sure that it is not covered in the 
comprehensive FAQ (http://www.mingw.org/mingwfaq.shtml) or already 
discussed in the mailing list archives which are accessible from 
the mailing list homepage or the seach facility provided on the 
leftside of the MinGW home page.


Reporting bugs and contributing
===============================
MinGW's existence and development is impossible without community
attention and contribution.  

For details on reporting bugs please refer to:
 
http://www.mingw.org/bugs.shtml

Submit patches for MinGW runtime/tools, corrections and additions 
for the web pages via:

http://sourceforge.net/patch/?func=addpatch&group_id=2435 .


MinGW maintainers,
http://sourceforge.net/projects/mingw/
