To: mingw-users@lists.sourceforge.net
Subject: [mini-FAQ/reminder]

Introduction
============
You receive this message because you are subscribed to the MinGW
mailing list. This is a reminder/mini-FAQ sent once a month. If 
you want to unsubscribe from the mingw-users mail list you can do 
so at http://lists.sourceforge.net/mailman/listinfo/mingw-users.  
Have your password handy (if you can't find it, you'll be offered 
an option to have it mailed to you).


What is MinGW?
==============
MinGW stands for "Minimalist GNU for Windows" and is a development
package (as well as target) which allows you to compile software 
for "native" Windows 32-bit platforms.  Please visit our website 
http://www.mingw.org for more information.


Who is author of MinGW? How is it maintained? What is licensing?
================================================================
MinGW was created by Colin Peters and put by him into the public 
domain.  There is no centralized force behind MinGW - it is 
maintained by volunteers and its development directed by the user 
community.  MinGW uses free GNU C/C++ compiler, its core libraries
and headers (Win32 import libraries and header definitions) are in 
public domain and it uses the vendor-supplied runtime library, so
in short, you can use it to develop royalty-free software, either
open- or close-sourced.  For more comprehensive licensing terms,
please visit http://www.mingw.org/licensing.shtml


Can MinGW be used to compile GNU or OpenSource software? MSVC one?
==================================================================
The MinGW runtime library adheres to ANSI C standard and offers 
very little POSIX compatibility.  ANSI compliant and VC++ compliant
software packages should be able to be compiled with little or no 
changes.  Most GNU software (and OpenSource sofware in general) 
uses GNU configure-based build procedure, which requires a Bourne
compliant shell, and other UNIX like utilities and are not
currently available for MinGW directly.  The solution is to cross-
compile to MinGW from more complete environment such as Cygwin or
Linux.  There is however a push to supply Bourne compliant shells
and UNIX utilities for MinGW in the distant future.

MinGW was specifically created to allow "native" (read: MSVC 
supplied runtimes) source to be compiled with GCC.  Most projects 
compile without any changes.  Still, some changes to build proce-
dure may be required.  Tools for automated conversion of MSVC 
projects exist.


What is MSYS and why should I use it?
=====================================
MSYS stands for Minimal SYStem and is a shell environment created
for use with the MinGW package.  MSYS provides the ability to 
execute configure scripts.  It also includes some *nix utilities
such as the vi editor.

For further details on MSYS please visit:

http://www.mingw.org/msys.shtml


Support
=======
The main source of user information can be found at MinGW's website
at http://www.mingw.org/.  There, you can find general information, 
download and installation instructions, links to ported software, 
FAQ, history and news, etc.  

The MinGW mailing list is a place to ask questions, discuss MinGW
related issues and announce availability of software.  Before 
posting questions, please make sure that it is not covered in the 
comprehensive FAQ (http://www.mingw.org/mingwfaq.shtml) or already 
discussed in the mailing list archives which are accessible from 
the mailing list homepage.


Reporting bugs and contributing
===============================
MinGW's existence and development is impossible without community
attention and contribution.  Please submit bugreports via
this link: http://sourceforge.net/bugs/?func=addbug&group_id=2435 
(if you are registered SourceForge user, please submit when you are
logged in). Submit patches for MinGW runtime/tools, corrections and
additions for the web pages via
http://sourceforge.net/patch/?func=addpatch&group_id=2435 .


MinGW maintainers,
http://sourceforge.net/projects/mingw/
