<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta content=
    "HTML Tidy for Linux/x86 (vers 1st February 2003), see www.w3.org"
          name="generator">
    <meta http-equiv="content-type" content=
    "text/html; charset=us-ascii">
    <meta name="description" content=
    "Home of MinGW -- Minimalist GNU for Windows -- project. Contains information about the MinGW runtime library and GNU/OSS development tools for MinGW.">
    <meta name="keywords" content=
    "mingw, mingw32, programming, C++, C, C/C++, libraries, software, development tools, editors, IDEs, GNU">
    <link href="mingw.css" type="text/css" rel="stylesheet"
          title="MinGW">
    <title>
      Mingw: File Download
    </title>
    <style type="text/css">
    :link { color: #000099 }
    :visited { color: #990099 }
    :active { color: #000099 }
    img.c5 {border: 0pt none ; width: 88px; height: 31px;}
    td.c4 {vertical-align: top;}
    </style>
  </head>
  <body>
    <h1>
      File Download
    </h1>
    <table class="prim" cellspacing="6" border="0">
      <tbody>
        <tr>
          <td class="side">
            <!--#include file="ssi/lsidebar.html"--><br>
            &nbsp;
          </td>
          <td>
            <table class="sec" cellspacing="6" border="0">
              <tbody>
                <tr>
                  <td>
<!-- ======================================================================= --><!--                                                                         --><!--                               Main Body                                 --><!--                                                                         -->
		    <h2><a name="Contents">
		      Contents
		    </a></h2>
		    <ul>
		      <li><a href="#hdr1">MinGW and MSYS Distributions</a></li>
		      <li><a href="#hdr2">File List</a></li>
		      <li><a href="#hdr3">Mirror Sites</a></li>
		      <li><a href="#hdr4">Understanding MinGW Packaging</a></li>
		      <li><a href="#hdr5">Decompression and Unarchiving Utilities</a></li>
		      <li><a href="#hdr6">Installing MinGW</a></li>
		      <li><a href="#hdr7">Updating MinGW</a></li>
		      <li><a href="#hdr8">Installing MSYS</a></li>
		      <li><a href="#hdr9">Updating MSYS</a></li>
		    </ul>

		    <hr>
                    <h2><a href="#Contents" name="hdr1">
                      MinGW and MSYS Distributions
                    </a></h2>
                    <p>
                      Development of MinGW is done within a
                      framework of inter-related <i>packages</i>.
                      There is a package for the MinGW runtime,
                      packages for GCC and other tool ports, a
                      package for the w32api, and so forth. All of
                      these packages conform to a set of common
                      conventions (internal layout, directory
                      structure, naming scheme). The traditional
                      method for installing MinGW was to create a
                      directory for the installation, download the
                      desired individual packages, and extract
                      their contents into the installation
                      directory (the common internal layout shared
                      by the packages made this possible).
                    </p>
                    <p>
                      However, in mid-2001 the team began
                      publishing a single-archive "MinGW
                      distribution"... bundling the latest versions
                      of key individual packages available at the
                      time of release. This was done partially to
                      streamline the installation process for
                      newbies, and partially to help application
                      and library developers design products that
                      will build using MinGW (previously MinGW was
                      a moving target with all the constant updates
                      to individual packages, but now it is easier
                      to verify things as being "MinGW 1.0
                      compatible").
                    </p>
		    <p>
		      Early in 2002 the MinGW team delivered a package
		      they had dubbed MSYS.  This is a Minimal SYStem
		      providing a self hosted mingw32 target POSIX style
		      environment.  The updates to this package and it's
		      utilities are more controlled as the entire package
		      (which uses subsets of many smaller packages) is 
		      considered to be one package.  This package is also
		      delivered in a Win32 style setup installation binary
		      for better control of the installation.
		    </p>
                    <p>
                      The individual packages making up the MinGW
                      distribution are still produced and made
                      available for download separately. Updated
                      versions of individual packages will
                      sometimes be made available in between
                      releases of the main MinGW distribution... in
                      most cases it should be possible to extract a
                      package's content into your MinGW directory
                      to take advantage of the updates immediately.
                    </p>
                    <p>
                      MinGW packages available for download are hosted by
		      <a target="_nw" href="http://www.sf.net/">SourceForge</a>.
		      SourceForge provides each project with a 
		      <a target="_nw" href=
		      "http://sf.net/project/showfiles.php?group_id=2435">
		      File Release System</a> 
		      for us to upload our releases to.  This system
		      is adequate for describing the singular package
		      distribution but provides challenges for the project that
		      provides an all-in-one type of package with updates
		      distributed individually.  We have therefore provided
		      for a dynamically updated release page of our own.  We
		      use the FRS provided by SourceForge to load the files
		      to one of five categories, Candidate, Current, Previous,
		      Proposed and Snapshot.  These categories are given at
		      the FRS package level.  The FRS release name is used to
		      give the package name and the files themselves are what
		      identify the release.  The script that creates the data
		      below is currently being perfected.  You may see the
		      below layout change as we perfect it.  However, we
		      suggest that you visit this page often for the status
		      of updates.
                    </p>

		    <hr>
		    <h2><a href="#Contents" name="hdr2">
		      File List
		    </a></h2>
		    
                    <!--#include file="ssi/release.html"-->
                     
		    <hr>
                    <h2><a href="#Contents" name="hdr3">
                      Mirror Sites
                    </a></h2>
                    <ul>
                      <li>
                        <a href=
                        "ftp://gd.tuwien.ac.at/gnu/mingw/">ftp://gd.tuwien.ac.at/gnu/mingw/</a>
                      </li>
                      <li>
                        <a href=
                        "http://gd.tuwien.ac.at/gnu/mingw/">http://gd.tuwien.ac.at/gnu/mingw/</a>
                      </li>
                    </ul>
                    <p>
                      If you wish to mirror the MinGW distributions
                      then please send a request to <a href=
                      "mailto:mingw-users-admin@lists.sourceforge.net">
                      mingw-users-admin@lists.sourceforge.net</a>.
                    </p>

		    <hr>
                    <h2><a href="#Contents" name="hdr4">
                      Understanding MinGW Packaging
                    </a></h2>
		    <p>
		      Each package is the responsibility of the individual
		      developer.  It is the developer to decide what archive,
		      compression and distribution methods to use.  You will
		      see any combination of file extentions, .tar.gz,
		      .tar.bz2, .zip, .exe, etc.  Typically we use a file
		      naming convention of 
		      &lt;package&gt;-&lt;version&gt;-&lt;timestamp&gt;-&lt;fileversion&gt;.&lt;filetype&gt;.
		      This is not strictly adhered to but timestamp is always
		      in some form of YYYYMMDD format.  The fileversion if
		      given represents the number of occurrences a file with the
		      same name otherwise has been uploaded.  For example,
		      a developer uploads foo-1.0-20030601-1.tar.gz and then
		      later that day realizes he forgot something important, so
		      he then uploads foo-1.0-20030601-2.tar.gz to correct the
		      mistake.  The timestamp is optional on the Current release
		      but is a must for anything else.
		    </p>
		    <p>
		      The packages that have a suffix .exe are developer
		      prepared Win32 installer executables.  They install the
		      package on your system in a known to the developer
		      manner.  This helps the developer to give you assistance
		      when it is requested.  Currently, two of these installer
		      executables are package bundles, MinGW-&lt;version&gt;-&lt;fileversion&gt;.exe.
		      and MSYS-&lt;version&gt;.exe.  MinGW consists of various
		      packages chosen by the developer to be included in a
		      base package bundle.  Updates to MinGW can be accomplished
		      by installing the individual package updates.  With MSYS
		      there currently isn't an individual package for each
		      package in its bundle.  The developer distributes the
		      entire package when there's an update.
		    </p>

		    <hr>
		    <h2><a href="#Contents" name="hdr5">
		      Decompression and Unarchiving Utilities</h2>
                    </a><p>
                     <em><b>WinZip Caution:</b></em><br>
                      Make sure that you first <b>uncheck</b> the
                      "TAR file smart CR/LF conversion" checkbox
                      found in the Configuration -&gt; Miscellaneous
                      tab of the Options menu.
		    </p>
		    <p>
		      <em><b>An Open Source Win32 style solution:</b></em><br>
                      <a href="http://www.7-zip.org" target=
                      "_nw">7-Zip</a> offers an open source compression and
		      decompression utility that will compress in two formats
		      and decompress in several formats.
		    </p>

		    <hr>
                    <h2><a href="#Contents" name="hdr6">
                      Installing MinGW
                    </a></h2>
		    <p>
		      How are you going to use MinGW?  That is a question you
		      need to ask yourself.  If you are a Bourne command line
		      wizard and want to use ./configure && make then you want
		      to install MSYS as well.  If you are an IDE wizard and
		      have a configurable IDE then you need to determine if the
		      IDE distributors provide MinGW for you need to download
		      from MinGW are updates to the individual packages.  You
		      can if you want even use MinGW from the %COMSPEC% shell
		      if you're proficient with that.
		    </p>
		    <p>
		      Once you've decided how you are using MinGW, then you
		      need to decide what to download.  The MinGW bundle with
		      individual updates are a good choice if you're also going
		      to use MSYS or from the %COMSPEC% shell.  The individual
		      packages you need to update your IDE with are a good
		      choice for that.  If you plan to use MSYS then you could
		      install MSYS first and install MinGW into the
		      &lt;msys_prefix&gt;/mingw directory.  Or install MinGW
		      in a separate directory tree and use the MSYS /etc/fstab
		      file to point the MSYS /mingw directory to it.
		    </p>
		    <p>
		      If you want to download the minimal set of tar.[gz|bz2]
		      you will need the mingw-runtime, w32api, binutils and gcc
		      tarball packages.  You can find the current versions of
		      these in the "Current" section above.  These will allow
		      you to create your win32 native packages from the command
		      line or configurable IDE.  Other packages that you might
		      need to round out your minimal installation are gdb and
		      mingw32-make.
		    </p>

		    <hr>
		    <h2><a href="#Contents" name="hdr7">
		      Updating MinGW
		    </a></h2>
		    <p>
		      You should watch the mailing list and news entries for
		      updates to packages.  In particular you want to update the
		      mingw-runtime and w32api when new versions of these
		      packages are announced.  Make sure that you install the
		      updates in your c:\mingw (or whereever you installed
		      MinGW).  If your using MSYS you can cd /mingw to unarchive
		      the updated tarballs.
		    </p>

		    <hr>
		    <h2><a href="#Contents" name="hdr8">
		      Installing MSYS
		    </a></h2>
		    <p>
		      MSYS is a self contained, win32 style installation
		      package.  To install it, simply download the MSYS .exe
		      file and then execute the file.  Once you've executed
		      the installation package accept the License, look at the
		      changes, choose the install directory, select if you
		      want icons, etc. and when you are done you should have a
		      working MSYS environment to execute your configure scripts
		      in.

		      If you need autoconf, automake, libtool, cvs, etc. you
		      will want to also install the msysDTK package.  Similar
		      to MSYS, the download is an installation binary.  It will
		      default the directory location to your MSYS installation
		      assuming that you've installed MSYS which you need to do
		      anyway as the package is dependent on it.
		    </p>

		    <hr>
		    <h2><a href="#Contents" name="hdr9">
		      Updating MSYS
		    </a></h2>
		    <p>
		      Watch for annoucements in the mailing list and news posts
		      for updates to the MSYS packages.  Make certain that you
		      have exited all MSYS binaries before updating.  The update
		      is executed similar to the installation process.  Note,
		      changes to files in the /etc directory will be
		      overwritten.  You should refrain from making changes to
		      files such as /etc/profile and instead add entries to
		      ~/.profile.  Similarly changes to /msys.bat should also
		      be avoided as this file will also be overwritten.  If you
		      wish to change the colors of the rxvt terminal then create
		      appropriate environment variables as described in the
		      msys.bat file.
		    </p>
<!--                            End of Main Body                             -->
                  </td>
                </tr>
                <tr>
                  <td class="c4">
                    <br>
                  </td>
                </tr>
              </tbody>
            </table>
          </td>
        </tr>
      </tbody>
    </table><!--#include file="ssi/bottombar.html"-->
    <!--#include file="ssi/footer.html"-->
    <p>
      <a href=
           "http://validator.w3.org/check/referer"><img border="0"
           src="http://www.w3.org/Icons/valid-html401" alt=
           "Valid HTML 4.01!" height="31" width="88"></a> <a href=
           "http://jigsaw.w3.org/css-validator/"><img class="c5"
           src="http://jigsaw.w3.org/css-validator/images/vcss"
           alt="Valid CSS!"></a>
    </p>
    <address>
      <br>
      Last revised $Date: 2003-06-30 17:23:44 $
    </address>
  </body>
</html>
