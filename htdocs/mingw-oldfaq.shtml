<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">
<!--$Id: mingw-oldfaq.shtml,v 1.5 2001-08-27 19:41:19 stevedperkins Exp $-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
   <title>"The Old FAQ"</title>
   <meta name="objecttype" content="FAQ" />
   <meta name="resource-type" content="document" />
   <meta name="author" content="Laura Michaels" />
   <meta name="description" content="Information about the Mingw Compiler.  
   Includes descriptive information and questions commonly brought up on the mailing list." />
   <meta name="keywords" content="mingw, mingw32, programming, C++, C, C/C++, libraries, 
   software, development tools, editors, IDEs, GNU" />
   <meta name="content-language" content="en" />
   <meta http-equiv="Content-type" content='text/html; charset="UTF-8"' />
   <style type="text/css"><!-- ol.alpha {list-style-type: upper-alpha} --></style>
   <style type="text/css"><!-- ol.romanum {list-style-type: lower-roman} --></style>
   <style type="text/css"><!-- ol {margin-top: 1em} --></style>
   <style type="text/css"><!-- ul {margin-top: 1em} --></style>
   <style type="text/css"><!-- ul {margin-bottom: 1em} --></style>
</head>
<body bgcolor="white" text="black" link="#0000EE" vlink="#551A8B" alink="red">
   <h1 align="center">"The Old FAQ"</h1>

   <!-- two-column format: left sidebar and the body -->
   <table border="0" cellspacing="6" cellpadding="8">
   <tr>
   <td bgcolor="#eeeeee" valign="top" width="10%">

   <!--#include file="ssi/lsidebar.html"-->

   </td>
   <!-- 2nd column of two-column format: the body -->
   <td valign="top">

   <!-- ================================================================== -->
   <!--                                                                    -->
   <!--			  Main Body                                     -->
   <!--                                                                    -->

   <table border="0" cellspacing="6" cellpadding="0">
   <tr>
   <td valign="top" align="left">
      <p>
         The following are questions and answers from "The Old FAQ", whose content 
         has yet to be assimilated into the consolidated FAQ or given a home 
         elsewhere.  Most of the questions still remaining here don't fit in 
         with the objectives of any currently-existing portion of the website... so
         they are waiting to be incorporated into the upcoming <i>MinGW User's Guide</i>.
      </p>



      <a name="index" />
      <ul>
         <li><a href="#othercompilerdistributions">Other compiler distributions</a></li>
         <li><a href="#help">Help</a></li>
         <li><a href="#debugging">Debugging</a></li>
         <li><a href="#idesandeditors">IDEs and editors</a></li>
         <li><a href="#morecompilingandbuildingissues">More compiling and building issues</a></li>
         <li><a href="#compileroutput">Compiler output</a></li>
         <li><a href="#patches">Patches</a></li>
         <li><a href="#guisapplicationframeworksuserinterfaces">GUIs/application frameworks/user interfaces</a></li>
         <li><a href="#libraries">Libraries</a></li>
         <li><a href="#otherprogrammingtools">Other programming tools</a></li>
         <li><a href="#otherresources">Other resources</a></li>
      </ul>
      
      <hr />

      <a name="othercompilerdistributions" />
      <h3>Other compiler distributions</h3>
      <p>
         Other compiler packages are available for Win32 systems.  These
         include:
      </p>
      <ul>
         <li>
            lcc-win from <a href="http://www.cs.virginia.edu/%7Elcc-win32/">
            http://www.cs.virginia.edu/&#126;lcc-win32/</a> is a Win32 C
            compiler complete with integrated environment.  I believe the
            distribution includes a working GUI resource editor that has been
            reported to work with other compilers such as mingw.
         </li>
         <li>
            bloodshed Dev-C++ from <a href="http://www.bloodshed.net/devcpp.html">
            http://www.bloodshed.net/devcpp.html</a> is a distribution of mingw32 with
            an IDE and other integrated tools.
         </li>
         <li>
            rsxnt, rsxntdj from <a href="http://www.mathematik.uni-bielefeld.de/%7Erainer/">
            http://www.mathematik.uni-bielefeld.de/&#126;rainer/</a>
            is used in conjunction with Gnu compilers on various platforms such
            as djgpp and emx to create Win32 executables.
         </li>
         <li>
            Watcom from <a href="http://www.openwatcom.org/">
            http://www.openwatcom.org/</a> is a collection of multi-platform C/C++ and
            Fortran compilers with integerated development environments.  Sybase
            has recently agreed to release the Watcom compiler under an Open Source
            License under the management of SciTech Software Inc.
            Their plans are to work with other Open Source development groups
            once development of the new Open Source version commences.
            Check their web site for the latest news on Watcom development.
         </li>
      </ul>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="help" />
      <h3>Help</h3>
      <ol>
         <li>
            <h4>Compiler, Win32 and C functions help files</h4>
            <p>
               The following are URLs of sources for compiler, Win32, C++ or C function
               documentation available freely through the Internet.
            </p>
            <ul>
               <li>
                  GNU and C library documentation in WinHelp format,
                  <a href="http://www.fe.up.pt/%7Eem96115/gnu-win32/">
                  http://www.fe.up.pt/&#126;em96115/gnu-win32/</a>
                  <br />
                  Other useful programs and examples for mingw too.
               </li>
               <li>
                  C library documentation in HTML format,
                  <a href="http://cs-alb-pc3.massey.ac.nz/software/gcc.exe">
                  http://cs-alb-pc3.massey.ac.nz/software/gcc.exe</a>
                  <br />
                  Also contains tutorial on C programming and some example C/C++
                  programs along with a small gcc distribution.
               </li>
               <li>
                  WinHelp documentation for GNU tools,
                  <a href="http://virtunix.itribe.net/winhelp-man-pages/">
                  http://virtunix.itribe.net/winhelp-man-pages/</a>
               </li>
               <li>
                  Windows API Reference,
                  <a href="http://www.borland.com/devsupport/borlandcpp/patches/BC52HLP1.ZIP">
                  http://www.borland.com/devsupport/borlandcpp/patches/BC52HLP1.ZIP</a>
               </li>
               <li>
                  Windows API Documation,
                  <a href="ftp://ftp.cs.virginia.edu/pub/lcc-win32/win32hlp.exe">
                  ftp://ftp.cs.virginia.edu/pub/lcc-win32/win32hlp.exe</a>
               </li>
               <li>  
                  Windows API HTMLHelp from MS platform software development
                  kit, <a href="ftp://ftp.microsoft.com/developr/platformsdk/april2000/common/help/">
                  ftp://ftp.microsoft.com/developr/platformsdk/april2000/common/help/</a>
               </li>
            </ul>
            <p>
               If you know of any other documentation, please mention it 
               so it can be added to the list.
            </p>
         </li>
         <li>
            <h4>Tutorials</h4>
            <ul>
               <li>
                  Programming Win32 with GNU C and C++ by Colin Peters at
                  <a href="http://webclub.kcom.ne.jp/ma/colinp/win32/index.html">
                  http://webclub.kcom.ne.jp/ma/colinp/win32/index.html</a>
               </li>
               <li>
                  C++ Windows Tutorial,
                  <a href="http://www.relisoft.com">http://www.relisoft.com</a>
                  <br />
                  Also has a directory for programmers trying to start or looking
                  for projects.
               </li>
               <li>
                  DevCentral Tutorials,
                  <a href="http://devcentral.iftech.com/learning/tutorials/">
                  http://devcentral.iftech.com/learning/tutorials/</a>
                  <br />
                  C++, Win32 and COM Tutorials.
               </li>
               <li>
                  List of Win32 tutorials,
                  <a href="http://people.montana.com/%7Ebowman/Software/winAPI.htm">
                  http://people.montana.com/&#126;bowman/Software/winAPI.htm</a>
               </li>
               <li>
                  The Programming Sharehouse, <a href="http://www.progsharehouse.com">
                  http://www.progsharehouse.com</a>
                  <br />
                  Tutorials, question and answer boards, links to source code
                  and information on programming related topics.
               </li>
            </ul>
            OpenGL Tutorials:
            <ul>
               <li>
            OpenGL Win32 Tutorial,
                  <a href="http://www.geocities.com/SiliconValley/Code/1219/opengl32.html">
                  http://www.geocities.com/SiliconValley/Code/1219/opengl32.html</a>
               </li>
               <li>
                  Neon Helium's OpenGL information, <a href="http://nehe.gamedev.net">
                  http://nehe.gamedev.net</a>
               </li>
               <li>
                  POT (Personal OpenGL Tutorial),
                  <a href="http://home.a-city.de/franco.bez/pot/pot_w32_en.html">
                  http://home.a-city.de/franco.bez/pot/pot_w32_en.html</a>
                  <br />
                  Franco Bez recommended this program for learning OpenGL.  It requires
                  TCL/TK to run.  It was originally targeted for Linux machines but a version has been 
                  ported to Win32.
               </li>
            </ul>
            Database Tutorials:
            <ul>
               <li>
                  ODBC Oracle Example Program,
                  <a href="ftp://ftp.simtel.net/pub/simtelnet/win95/prog/odbcora8.zip">
                  ftp://ftp.simtel.net/pub/simtelnet/win95/prog/odbcora8.zip</a>
                  <br />
                  An example of how to write ODBC code.  The Visual C++ version
                  compiles with the mingw32 C compiler (although main really should be
                  declared with a return value of int for mingw to be happy).  When creating
                  the executable, be sure to link in <code>-lodbc32</code>.
               </li>
            </ul>
            C++ Tutorials:
            <ul>
               <li>
                  C++ Annotations,
                  <a href="http://www.icce.rug.nl/docs/cplusplus/cplusplus.html">
                  http://www.icce.rug.nl/docs/cplusplus/cplusplus.html</a>
               </li>
            </ul>
         </li>
      </ol>
      <p><a href="#index">Back to index</a></p>


      <hr />

      <a name="debugging" />
      <h3>Debugging</h3>
      <ol>
         <li>
            <h4>Write statements</h4>
            <p>
               The simplest method of debugging is to add write statements to
               the code in order to tell what's going on.  In C, <code>puts</code> and <code>printf</code>
               are useful.  In C++, <code>cout</code> is helpful.  In Windows, the <code>MessageBox</code>
               is helpful as long as you don't call it during a paint routine.  If
               you do anything in a Windows application that tries to repaint the screen during a paint
               call, you can get stuck in an infinite loop.  Some programmers find using <code>assert</code>
               statements a good method to help debug.
            </p>
         </li>
         <li>
            <h4>Map files and crash addresses</h4>
            <p>
               If you can get the address of a program crash and you have a map
               file for your program, you can locate the line or routine where the program crashed.
            </p>
            <p>
               Certain systems, such as Windows NT and some Windows 98 machines, have
               a program named Dr. Watson available which will supply information about
               a program when it crashes.  Some commercial compilers also supply a program
               with this functionality.  If you have one of these programs available on
               your system, you can use the address of the crash supplied by it to
               help locate the problem.  If anyone knows of any freeware programs that duplicate
               this functionality or has source code to find the address during a
               crash, please let me know.
            </p>
            <p>
               Here are three ways to create a map file.  Choose the method
               you like best.  In these examples, I've used sample names
               such as file.map and file.exe.  Change the map, executable and object
               files to ones more relevant to your particular project.
            </p>
            <pre>
   ld file.exe -Map file.map

   nm --extern-only --defined-only -v --print-file-name file.exe &gt; file.map

   g++ -Wl,-Map,file.map -o file file.o otherfile.o
            </pre>
            <p>
               On systems such as Windows NT, you can specify what application is run
               when a program crashes.  To do so, edit the Debugger value for the
               HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\AeDebug
               registry key and change it to the program you want run after a crash.
               Windows makes available the ID of the process to debug and
               an event ID to signal when the debugger finishes calling
               DebugActiveProcess.  These can be passed via command line to the program
               listed as Debugger.  Setting the auto value for this registry key
               to 1 causes the program listed as Debugger to automatically run.
               Setting it to 0 brings up a crash dialog instead.
            </p>
         </li>
         <li>
            <h4>Dr. MinGW</h4>
            <p>
               Dr. MinGW is a just-in-time exception handler for mingw.
               See <a href="http://www.fe.up.pt/%7Eem96115/gnu-win32/">
               http://www.fe.up.pt/&#126;em96115/gnu-win32/</a> for a copy.
               It will automatically install itself as the default debugger in
               the registry if run with the proper options.  If you do not
               already have some debugger installed on your system, you may
               have to add HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\AeDebug
               to your registry by hand before successfully running the install option.
            </p>
         </li>
         <li>
            <h4>Debugger</h4>
            <p>
               For more in depth debugging, you will most likely need the help
               of a debugger program.  Mingw includes gdb (Gnu debugger) in its
               distribution.  
            </p>
         </li>
         <li>
            <h4>GUI debugger</h4>
            <p>
               Many people prefer a GUI front end to their debugger.  Mingw
               currently does not supply this in its distribution.  This leaves
               two options for GUI debuggers.  Use one from another compiler distribution
               or use a GUI front end to gdb.  Here are some links for both options.
            </p>
            <p>
               These are some GUI front ends to gdb:
            </p>
            <ul>
               <li>
                  Insight, <a href="http://sourceware.cygnus.com/insight/">
                  http://sourceware.cygnus.com/insight/</a>
                  <br />
                  Requires cygwin.
               </li>
               <li>
                  Jessie, <a href="http://oss.sgi.com/projects/jessie/">
                  http://oss.sgi.com/projects/jessie/</a>
                  <br />
                  Implemented largely in Java.
               </li>
            </ul>
            <p>
               Check the
               <a href="#othercompilerdistributions">Other compiler distributions</a>
               section for other compilers with different debuggers.
            </p>
            <ul>
               <li>
                  The lcc-win32 project is working on a GUI debugger.  The current
                  version works only for C code.  Download a copy from
                  <a href="ftp://ps.qss.cz/pub/lcc/weditgcc.zip">
                  ftp://ps.qss.cz/pub/lcc/weditgcc.zip</a>
               </li>
            </ul>
         </li>
      </ol>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="idesandeditors" />
      <h3>IDEs and editors</h3>
      <ol>
         <li>
            <h4>What IDEs are available?</h4>
            <p>
               There are several IDEs (Integrated Development Environments)
               for Win32 platforms.  Some are freeware and some are not.  Some
               are specifically tailored to mingw and others are for more
               general use.
            </p>
            <ul>
               <li>
                  RSXIDE, <a href="http://www.mathematik.uni-bielefeld.de/%7Erainer/">
                  http://www.mathematik.uni-bielefeld.de/&#126;rainer/</a>
                  <br />
                  Built in support for djgpp, rsxnt, emx/nt09d and mingw.  Works with
                  any editor that supports DDE.  This program in conjunction with an editor
                  like PFE makes an easy-to-use but flexible IDE.
               </li>
               <li>
                  DFE95, <a href="http://www.musc.edu/%7Ebrannanp/dfe95/">
                  http://www.musc.edu/&#126;brannanp/dfe95/</a>
                  <br />
                  Works with mingw.
               </li>
               <li>
                  Vide, <a href="http://www.objectcentral.com">http://www.objectcentral.com</a>
                  <br />
                  Tested with mingw.
               </li>
               <li>
                  Quincy 2000, <a href="http://www.midifitz.com/alstevens/quincy2000">
                  http://www.midifitz.com/alstevens/quincy2000</a>
                  <br />
                  From Al Stevens.  Covered in various Dr. Dobb's articles and Al 
                  Stevens books on learning C++.  The Quincy 99 version had a bug when running 
                  on Windows NT.  Don't know if this has been corrected in the latest version.
               </li>
               <li>
                  JFE (Jen's File Editor), <a href="http://cs-alb-pc3.massey.ac.nz/software/">
                  http://cs-alb-pc3.massey.ac.nz/software/</a>
                  <br />
                  For use with mingw.  The source is available in the file jfesrc.zip, but
                  appears to be written to compile using the Microsoft compiler.  The IDE is
                  available in gcc.exe along with a small gcc distribution.  Has some nice features
                  including automatically building HTML documentation files for projects and easy
                  viewing of and navigation to functions in a project.  (I personally miss the key-mapping
                  functionality of PFE though.)
               </li>
               <li>
                  Code Magic, <a href="http://www.codemagiccd.com/">
                  http://www.codemagiccd.com/</a>
               </li>
               <li>
                  Super IDE, <a href="http://protostar.hypermart.net/">
                  http://protostar.hypermart.net/</a>
               </li>
               <li>
                  Pow! - Programmers Open Workbench, <a href="http://www.fim.uni-linz.ac.at/pow/Pow.htm">
                  http://www.fim.uni-linz.ac.at/pow/Pow.htm</a>
               </li>
               <li>
                  ACIDE, <a href="http://pages.zoom.co.uk/andyc/">
                  http://pages.zoom.co.uk/andyc/</a>
                  <br />
                  Can be configured to work with many languages/compilers.
               </li>
               <li>
                  Visual Programming Armoury,
                  <a href="http://www.zdnet.co.uk/software/free/dev/java/sw49.html">
                  http://www.zdnet.co.uk/software/free/dev/java/sw49.html</a>
               </li>
               <li>
                  Assembler Laboratory, 
                  <a href="http://tihlde.org/%7Ekurtg/">http://tihlde.org/&#126;kurtg/</a>
               </li>
               <li>
                  Octopod, <a href="http://www.octopod.net">http://www.octopod.net</a>
                  <br />
                  Commercial IDE.
               </li>
            </ul>
         </li>
         <li>
            <h4>What editors are available?</h4>
            <ul>
               <li>
                  PFE (Programmer's File Editor), 
                  <a href="http://www.winsite.com/info/pc/win95/misc/pfe101i.zip/">
                  http://www.winsite.com/info/pc/win95/misc/pfe101i.zip/</a>
               </li>
               <li>
                  Vim (Vi Improved), <a href="http://www.vim.org/">http://www.vim.org/</a>
               </li>
               <li>
                  JED, <a href="http://space.mit.edu/%7Edavis/jed.html">
                  http://space.mit.edu/&#126;davis/jed.html</a>
               </li>
               <li>
                  Emacs, several versions are available.  Check the
                  Gnu web site or your favorite search engine.
               </li>
               <li>
                  Scintilla and SciTE, 
                  <a href="http://www.scintilla.org/">http://www.scintilla.org/</a>
                  <br />
                  Scintilla is an Open Source editing component and SciTE is a 
                  text based editor which uses it.
               </li>
            </ul>
         </li>
         <li>
            <h4>Other reference sites</h4>
            <ul>
               <li>
                  Free Editors for C/C++ Programming with Windows at 
                  <a href="http://www.blockdev.net/Community/Editors/">
                  http://www.blockdev.net/Community/Editors/</a>
                  lists other editor and IDE resources.
               </li>
               <li>
                  For those who prefer DOS editors, there are many good options such as edwin and pedit.
               </li>
            </ul>
         </li>
      </ol>
      <p><a href="#index">Back to index</a></p>


      <hr />



      <a name="morecompilingandbuildingissues" />
      <h3>More compiling and building issues</h3>
      <ol>
         <li>
            <h4>main or WinMain?</h4>
            <p>
               Windows programs use WinMain instead of main.  However, MinGW is set up so 
               that you can use either.
            </p>
         </li>
         <li>
            <h4>Why are my executable sizes large?</h4>
            <p>
               Some users on the MinGW mailing list have noticed
               ending up with unusually large executable sizes.  This can happen
               if you leave in debugging information.  To make your executables
               smaller, try linking with the -s switch or use the strip program
               on the final executable (not the object or library files).  Compiling
               without the -g option is another alternative.
            </p>
         </li>
         <li>
            <h4>Linking to other compilers' libraries</h4>
            <p>
               Due to binary compatibility issues between different compilers, you cannot
               directly link in libraries or object code from one compiler to another compiler such
               as MinGW and expect it to work.  The reverse is true as well.  Even dlls are not
               completely portable across compilers.  To deal with this issue, various
               standards such as COM and CORBA were created.
            </p>
            <p>   
               If you want to use a library or objects from one compiler with another,
               the easiest way to do it is to have the source (.c, .cpp, .rc, .def, etc.) and
               to compile and build that code with the desired compiler and its tools.  You 
               can use the same dll with different compilers with varying degrees of success.  
               You'll need either a .def file or to use calls such as LoadLibrary/GetProcAddress 
               to do so.  The self-hosting version of MinGW provides better support of Visual C++ 
               binary compatibility.  You can use certain libraries built with Visual C++ with this 
               version of MinGW without having to rebuild them using MinGW and vice versa.
            </p>
         </li>
         <li>
            <h4>Linking libraries</h4>
            <p>
               If you place libraries before the object files that reference them,
               the linker will be unable to find them.  The linker works left-to-right,
               single pass.  The easiest way to avoid the problem is to place all libraries
               after the object files.  It is also recommended that libraries to be linked
               with should not be repeated on the command line.  While listing the same library
               more than once works with several linkers, the MinGW linker currently has problems
               with this situation and may leave needed routines out of the link when this is done.
            </p>
            <p>
               Here's an example of a line that links in multiple objects and libraries:
            </p>
            <pre>
   gcc -o hello hello.o util.o pdcurses.a -ltstdll
            </pre>
            <p>   
               The command links in the libraries pdcurses.a and libtstdll.a to create
               an executable hello.exe.
            </p>
         </li>
         <li>
            <h4>Linking to dlls</h4>
            <p>
               Although dlls are supposed to be fairly portable across different Windows 
               compilers, accessing dlls through a library file (.lib or .a) is not.  The 
               library file formats are specific to particular compilers and cannot be used
               portably with different compilers unless the compiler provides support
               for it.  
            </p>
            <p>
               There are two ways to link to a dll.
            </p>
            <ul>
               <li>
                  Provide a library file to let the program know what routines are
                  in the dll and where to find them.
               </li>
               <li>
                  Use LoadLibrary/FreeLibrary and GetProcAddress.
               </li>
            </ul>
            In order to use Microsoft or other compiler dlls, you can use any
            of the following methods:
            <ul>
               <li>
                  Create def and library files.  If you have the object files for the dll
                  created using MinGW, you can create a def file and a library file using
                  the following method.
                  <pre>
   dlltool --output-def file.def --output-lib libfile.a [list of objects]
                  </pre>
                  Substitute your object file names for <code>[list of objects]</code>.
                  If you only have the dll file, see the
                  <a href="#howtocreateadeffileforadll">How to create a def file for a dll</a>
                  section for alternative techniques.
                  Once you have a def file, you can create a library file (.a)
                  in the proper format for MinGW using dlltool.  For example:
                  <pre>
   dlltool --def file.def --dllname file.dll --output-lib file.a
                  </pre>
               </li>
               <li>
                  The self-hosting version of MinGW has additional Microsoft compatible support
                  and should allow you to link directly with library files in Microsoft .lib
                  format.  See the links in the <a href="#otherresources">Other resources</a>
                  section.
               </li>
               <li>
                  Use LoadLibrary/FreeLibrary and GetProcAddress.  With this method, no library
                  file (.lib or .a) is required.  You can connect directly to the dll.  LoadLibrary
                  must be called before the dll can be accessed.  FreeLibrary should be called
                  before exiting the program.  GetProcAddress is used to access specific functions
                  in the dll by retrieving their addresses.  You'll need to call GetProcAddress for
                  each function from the dll you want to work with.  Check a Win32 reference such as
                  those found in the <a href="#help">Help</a> links for more information on the use
                  of these functions.
               </li>
            </ul>
            <p>
               (Note:  While C functions in dlls are generally portable across compilers,
               I'm told that this isn't necessarily true for C++.  When writing your
               own dlls, you can mark C++ functions and data in dlls as extern "C" to
               help bridge some of the C++ portability issues between compilers.  See
               the MinGW mailing list archives for more portability concerns regarding dlls.)
            </p>
         </li>
         <li>
            <h4>What are other useful compiler flags?</h4>
            <p>
               You can get help by using the <code>--help</code> option.
               <br />
               For example:
            </p>
            <pre>
   gcc --help
            </pre>
            You can display the compiler version using the <code>-dumpversion</code> option.
            You can display the platform using the <code>-dumpmachine</code> option.
            You can specify include files not in your path by using <code>-I</code>.
            <br />
            For example:
            <pre>
   gcc -c hello.c -I../pdcurses
            </pre>
            You can specify a directory for library files indicated by the <code>-l</code>
            option by using <code>-L</code>.
            You can use <code>-g</code> to add debug information for the debugger to work
            properly.
            You can use <code>-D</code> to specify a define.
            <br />
            For example:
            <pre>
   gcc -c hello.c -D__WINDOWS__
            </pre>
            You can use <code>-v</code> to find out more about the executables being
            invoked.
            <br />
            For example:
            <pre>
   gcc -v
            </pre>
         </li>
      </ol>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="compileroutput" />
      <h3>Compiler output</h3>
      <ol>
         <li>
            <h4>Error redirection</h4>
               <p>
                  MinGW displays compilation and linking errors to stderr instead
                  of stdout.  To easily view these errors, you may need to redirect
                  the output to stdout or a file.  Some methods to do so include using 
                  one of the following programs:
               </p>
               <ul>
                  <li>
                     redir,
                     <a href="ftp://ftp.xraylith.wisc.edu/pub/khan/gnu-win32/mingw32/ports/redir.zip">
                     ftp://ftp.xraylith.wisc.edu/pub/khan/gnu-win32/mingw32/ports/redir.zip</a>
                  </li>
                  <li>
                     errfix,
                     <a href="http://www.brokersys.com/snippets/">
                     http://www.brokersys.com/snippets/</a>
                     <br />
                     See the Errfix.C file
                  </li>
                  <li>
                     On Windows NT systems stderr can be redirected.
                     <br />
                     For example:  gcc --help 2&gt;&amp;1|more
                  </li>
               </ul>
            </li>
            <li>
               <h4>Keeping the dos box open</h4>
               <p>
                  Some users have had trouble with the dos box closing after
                  building a program and haven't been able to see their errors.  The
                  MinGW mailing list came up with several suggestions on how to
                  deal with this.  One suggestion from Franco Bez is as follows:
               </p>
               <p>
                  By modifying a few Registry Keys - you can add a context menu item 
                  <code>Run - stay open</code>, so you simply <em>right click</em> on
                  the Batch file and choose <code>Run - stay open</code> and your batch
                  runs and stays open.
               </p>
               <p>
                  The following Registry files do this and a little more: 
               </p>
               <ul>
               <li>
                  context menu <code>DOS Box</code> for Folders and files - opens a dos box 
                  in the folder
               </li>
               <li>
                  context menu <code>Notepad</code> for all files, even those with 
                  missing/unknown extension - opens the file in Notepad for editing
               </li>
               <li>
                  context menu <code>Run - stay open</code> for bat, com and exe files
               </li>
            </ul>
            <p>
               Place the following lines in a file (such as Win95_98.reg or WinNT.reg) and
               simply merge the file for your system to your registry by doubleclicking it.
               The example below is for Windows NT.  If you are using a Windows 95 or 98
               system, change all the occurrences of <code>cmd</code> to 
               <code>command.com</code>.
            </p>
            <pre>
   REGEDIT4

   [HKEY_CLASSES_ROOT\*]

   [HKEY_CLASSES_ROOT\*\shell]

   [HKEY_CLASSES_ROOT\*\shell\dos_box]
   @="DOS Box"

   [HKEY_CLASSES_ROOT\*\shell\dos_box\command]
   @="cmd"

   [HKEY_CLASSES_ROOT\*\shell\open]
   @="Notepad"

   [HKEY_CLASSES_ROOT\*\shell\open\command]
   @="Notepad.exe %1"

   [HKEY_CLASSES_ROOT\Folder\shell]

   [HKEY_CLASSES_ROOT\Folder\shell\dos_box]
   @="DOS Box"

   [HKEY_CLASSES_ROOT\Folder\shell\dos_box\command]
   @="cmd /k cd %1"

   [HKEY_CLASSES_ROOT\batfile\shell]

   [HKEY_CLASSES_ROOT\batfile\shell\runstayopen]
   @="R&amp;un - Stay open"

   [HKEY_CLASSES_ROOT\batfile\shell\runstayopen\command]
   @="cmd /k %1"

   [HKEY_CLASSES_ROOT\comfile\shell]

   [HKEY_CLASSES_ROOT\comfile\shell\runstayopen]
   @="R&amp;un - Stay open"

   [HKEY_CLASSES_ROOT\comfile\shell\runstayopen\command]
   @="cmd /k %1"

   [HKEY_CLASSES_ROOT\exefile\shell]

   [HKEY_CLASSES_ROOT\exefile\shell\runstayopen]
   @="R&amp;un - Stay open"

   [HKEY_CLASSES_ROOT\exefile\shell\runstayopen\command]
   @="cmd /k %1"
            </pre>
         </li>
      </ol>
      <p><a href="#index">Back to index</a></p>

      <hr />


     
      <a name="patches" />
      <h3>Patches</h3>
      <p>
         If you have changes to source code, it may be easier to distribute
         them as patches than to send the entire code to someone or list the changes by hand.
         Patching is an automated process of updating files using tools such as
         patch and diff.
      </p>
      <p>
         Patches can be created by comparing two files with the diff program or
         from various version control systems such as RCS.  Several versions of diff
         have been ported to Windows and DOS.  See sites such as Virtually Un*x listed
         in the Other programming tools section.  There are also several versions of
         patch available for use in applying patches to source code.  One site that
         includes it is Mumit's site also listed in the Other programming tools section.
         Detailed help information on using diff and patch and the various options available
         for working with them is also available in WinHelp format from the Virtually Un*x
         site.
      </p>
      <p>
         To create a patch, compare the two versions of the file with diff.  Here's an 
         example:
      </p>
      <pre>
   diff --ignore-all-space old\file.cpp current\file.cpp &gt; patch.fil
      </pre>
      <p>
         The example ignores whitespace and compares the old version of file.cpp
         in directory old with the latest version in directory current.  The
         output is redirected to a file.  Most patches these days also include
         the <code>-c</code> or <code>-u</code> option which allows programmers
         to figure out what has changed in a file by viewing the context of the
         lines around it.  Another common option is <code>-r</code> for working
         with entire directories instead of single files.  The option <code>-p</code>
         may also be useful.  It adds information on what C functions a change
         appears in.
      </p>
      <p>
         To patch a file, you'll need the original source file (old version)
         and the file with the patches created by diff.  Here's an example of
         how to call patch:
      </p>
      <pre>
   patch -o file.cpp ..\old\file.cpp patch.fil
      </pre>
      <p>
         The command patches file.cpp in the old directory and outputs the updated
         file to file.cpp (specified by the <code>-o</code> option).  Another useful
         switch for use with patch is <code>-p</code> which can affect the naming/location
         of files and can be used when working with compared directories.
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />


      <a name="guisapplicationframeworksuserinterfaces" />
      <h3>GUIs/application frameworks/user interfaces</h3>
      <ol>
         <li>
            <h4>Can I use MFC or OWL?</h4>
            <p>
               MinGW provides access to the Win32 API.  Theoretically, if you
               own the MFC source code you could build MFC libraries for MinGW.
               No one's tried this so far.  If anyone does successfully accomplish
               it, please say so and it will be added to this document.
            </p>
            <p>
               For OWL owners, there is a port with additional features which
               supports various compilers including the gcc compiler line.  See
               <a href="http://owlnext.starbase21.com/">http://owlnext.starbase21.com/</a>
               for details.  Thanks to Greg Chicares for supplying this information.
            </p>
         </li>
         <li>
            <h4>What GUIs/application frameworks/user interface libraries are available?</h4>
            <p>
               There are a number of these available.  The following are known
               to have worked with MinGW.  There are several other libraries
               out there.
            </p>
            <ul>
               <li>
                  Curses, PDCurses, 
                  <a href="http://www.lightlink.com/hessling/">http://www.lightlink.com/hessling/</a>
               </li>
               <li>
                  Windows++, 
                  <a href="http://www.dilascia.com/wpp.htm">http://www.dilascia.com/wpp.htm</a>
               </li>
               <li>
                  wxWindows, <a href="http://wxwindows.org">http://wxwindows.org</a>
               </li>
               <li>
                  V, <a href="http://www.objectcentral.com/">http://www.objectcentral.com/</a>
               </li>
               <li>
                  fltk, <a href="http://www.fltk.org/">http://www.fltk.org/</a>
               </li>
               <li>
                  Fox, <a href="http://cyberia.cfdrc.com/FOX/fox.html">
                  http://cyberia.cfdrc.com/FOX/fox.html</a>
               </li>
               <li>
                  Open Amulet, <a href="http://www.openip.org/">http://www.openip.org/</a>
               </li>
               <li>
                  GTK+, <a href="http://user.sgic.fi/%7Etml/gimp/win32/">
                  http://user.sgic.fi/&#126;tml/gimp/win32/</a>
               </li>
               <li>
                  QT (see MinGW mailing list for information on what was done to 
                  get this library to compile)
               </li>
            </ul>
         </li>
      </ol>
      <p><a href="#index">Back to index</a></p>

      <hr />


      <a name="libraries" />
      <h3>Libraries</h3>
      <p>
         If you've had luck with building other programming libraries and would like 
         to see them added to the list, please e-mail information on where 
         these libraries can be found and what you needed to do to build 
         them.
      </p>
      <p>
         Here is a list of some of the libraries and programs that
         can be built with MinGW.
      </p>
      <ol>
         <li>
            <h4>Graphics libraries</h4>
            <ul>
               <li>
                  <h5>OpenGL</h5>
                  <ol>
                     <li>
                        <i>Where to get it?</i>
                        <p>
                           You can get access to OpenGL when you install a framework like
                           fltk or wxWindows.  You can also install it yourself and
                           use it directly.  See the <a href="#tutorials">Tutorials</a> section 
                           for more information on working with OpenGL on a Win32 platform.  
                        </p>
                        <p>
                           If you wish to install it yourself, OpenGL and glut headers
                           are available from 
                           <a href="http://www.cim.pe.u-tokyo.ac.jp/%7Ekawachi/software/cygwin_glut-e.html">
                           http://www.cim.pe.u-tokyo.ac.jp/&#126;kawachi/software/cygwin_glut-e.html</a>
                        </p>
                        <p>
                           Create a GL directory under your include directory
                           (for example:   <code>i386-mingw32/include/GL</code>).
                        </p>
                        <p>
                           You will need to move the <code>gl*.h</code> files to this directory.  If you
                           do not have <code>glut32.dll</code> installed on your system, move it to your 
                           Windows system directory.
                        </p>
                        <p>
                           To get a copy of the <code>glaux.h</code> header, you can download it from 
                           <a href="http://people.montana.com/%7Ebowman/Software/ming.htm">
                           http://people.montana.com/&#126;bowman/Software/ming.htm</a>
                        </p>
                     </li>
                     <li>
                        <i>How to compile OpenGL applications</i>
                        <p>
                           There are some sample OpenGL programs available from 
                           <a href="http://trant.sgi.com/opengl/examples/win32_tutorial/win32_tutorial.html">
                           http://trant.sgi.com/opengl/examples/win32_tutorial/win32_tutorial.html</a>
                           <br />
                           While they don't include a make file, you can compile them just
                           as you would any other programs.  To link, don't forget the flags:
                           <br />
                           <code>-mwindows -lglut -lglu32 -lopengl32</code>
                        </p>
                        <p>
                           For the examples included at
                           <a href="http://www.cim.pe.u-tokyo.ac.jp/%7Ekawachi/software/cygwin_glut-e.html">
                           http://www.cim.pe.u-tokyo.ac.jp/&#126;kawachi/software/cygwin_glut-e.html</a>,
                           link with the following flags:
                           <br />
                           <code>-mwindows -lglut32 -lglu32 -lopengl32</code>
                        </p>
                     </li>
                  </ol>
               </li>
               <li>
                  <h5>DirectX</h5>
                  <p>
                     The latest version of DirectX for gcc is available from
                     <a href="http://pws.prserv.net/thefortins/cyg-directx.html">
                     http://pws.prserv.net/thefortins/cyg-directx.html</a>
                  </p>
                  <p>
                     An alternative version of DirectX is available from
                     <a href="http://people.montana.com/%7Ebowman/Software/ming.htm">
                     http://people.montana.com/&#126;bowman/Software/ming.htm</a>.
                     If you're using MinGW version 2.95 or later, you only need
                     to do step 2 and add only the files that are not already in your
                     current MinGW distribution.  Many of the OpenGL and DirectX libraries and
                     includes have already been added to 2.95 and later distributions and
                     overwriting them can cause problems.
                  </p>
                  <p>
                     There are some compatibility issues for Windows NT 4.  It does
                     not provide full DirectX support for the latest versions of DirectX.  See
                     the MinGW mailing list for more information.
                  </p>
                  <p>
                     For installation tips and getting started, see
                     <a href="http://nrmassey.future.easyspace.com/Dx">
                     http://nrmassey.future.easyspace.com/Dx</a>
                  </p>
               </li>
               <li>
                  <h5>libpng and libjpeg</h5>
                  <p>
                     Information on building and using these libraries with
                     MinGW is available from
                     <a href="http://www.wonderstorm.com/techstuff/gcc-mingw32.html">
                     http://www.wonderstorm.com/techstuff/gcc-mingw32.html</a>
                  </p>
               </li>
               <li>
                  <h5>Mesa</h5>
                  <p>
                     See <a href="ftp://ftp.teleport.com/pub/users/pgarceau">
                     ftp://ftp.teleport.com/pub/users/pgarceau</a> for more information.
                  </p>
               </li>
               <li>
                  <h5>Simple DirectMedia Layer, libu and other multimedia libraries</h5>
                  <p>
                     <a href="http://www.devolution.com/%7Eslouken/SDL/intro/toc.html">
                     http://www.devolution.com/&#126;slouken/SDL/intro/toc.html</a>
                     <br />
                     Simple DirectMedia Layer (SDL), cross-platform multimedia library.
                  </p>
                  <p>
                     <a href="http://www.rhrk.uni-kl.de/%7Eklaux/libu.html">
                     http://www.rhrk.uni-kl.de/&#126;klaux/libu.html</a>
                     <br />
                     Libu C++ toolkit for SDL.
                     Also has links to cross-compiled versions of Freetype, libpng and zlib.
                  </p>
               </li>
            </ul>
         </li>
         <li>
            <h4>Database libraries</h4>
            <ul>
               <li>
                  <h5>Xbase</h5>
                  <p>
                     <a href="http://linux.techass.com/projects/xdb/">
                     http://linux.techass.com/projects/xdb/</a>
                     <br />
                     Dbase/Clipper compatible, cross-platform database library.
                     Successfully compiled with file locking off under MinGW.
                  </p>
               </li>
               <li>
                  <h5>MetaKit</h5>
                  <p>
                     <a href="http://www.equi4.com/metakit/">
                     http://www.equi4.com/metakit/</a>
                     <br />
                     Cross platform, C++ database library.
                  </p>
               </li>
               <li>
                  <h5>libodbc++</h5>
                  <p>
                     <a href="http://www.orcane.net/freeodbc++/">
                     http://www.orcane.net/freeodbc++/</a>
                     <br />
                     C++ class library, similar to JDBC, for ODBC access.
                     Compiled and built successfully with MinGW.  For now, see the
                     MinGW mailing list for some of the changes that were needed.
                     See also, ODBC access below since ODBC is required to use this library.
                  </p>
               </li>
               <li>
                  <h5>Oracle access</h5>
                  <p>
                     Oracle can be accessed using Oracle's pro*c and sqllib80.dll
                     (or sqllib18.dll for those with older versions of pro*c).
                     There's an example article on how to access Oracle from unsupported
                     compilers at <a href="http://technet.oracle.com">http://technet.oracle.com</a>.
                     Oracle's OCI interface also works in some cases using oci.dll or ociw32.dll.
                     If there's enough interest, I'll add source code for doing this to the FAQ as well.
                  </p>
               </li>
               <li>
                  <h5>ODBC access</h5>
                  <p>
                     An ODBC manager (such as ODBC Data Sources program accessible via the
                     Control Panel) is necessary to run ODBC programs.  If anyone has any
                     URLs for where to get an ODBC manager, please let me know.
                     Some possibilities if you don't already have one on your system
                     are to check the following:
                  </p>
                  <ul>
                     <li>
                        <a href="http://www.microsoft.com/data/odbc/">
                        http://www.microsoft.com/data/odbc/</a>
                     </li>
                     <li>
                        <a href="http://support.novell.com/cgi-bin/show_information?FileName=odbcbeta.exe">
                        http://support.novell.com/cgi-bin/show_information?FileName=odbcbeta.exe</a>
                     </li>
                     <li>
                        <a href="http://users.ids.net/%7Ebjepson/freeODBC/index.html">
                        http://users.ids.net/&#126;bjepson/freeODBC/index.html</a>
                     </li>
                     <li>
                        <a href="http://www.bulletproof.com/odbc/">http://www.bulletproof.com/odbc/</a>
                        <br />
                        Danny Smith recommended this link for ODBC 3.0 driver manager
                        and Access, SQL Server, DBase, Oracle, FoxPro and Paradox drivers.
                     </li>
                  </ul>
                  <p>
                     I'd be interested to hear if anyone has any luck with these.
                  </p>
               </li>
            </ul>
         </li>
         <li>
            <h4>Other libraries</h4>
            <ul>
               <!-->
               <li><h5>Virtual Windows Class Library</h5>
               <p><a href="http://www.vwcl.org/">http://www.vwcl.org/</a>
               </p>
               </li>
               <--!>
               <li>
                  <h5>GNU gettext</h5>
                  <p>
                     <a href="http://home.a-city.de/franco.bez/gettext/gettext_win32_en.html">
                     http://home.a-city.de/franco.bez/gettext/gettext_win32_en.html</a>
                     <br />
                     Library/Tool used to help write internationalized and localized programs.
                  </p>
               </li>
               <li>
                  <h5>GNU readline</h5>
                  <p>
                     <a href="http://www.is.lg.ua/%7Epaul/devel/readline/">
                     http://www.is.lg.ua/&#126;paul/devel/readline/</a>
                     <br />
                     Gnu library for command line editing.
                  </p>
               </li>
               <li>
                  <h5>zlib</h5>
                  <p>
                     <a href="ftp://ftp.freesoftware.com/pub/infozip/zlib/">
                     ftp://ftp.freesoftware.com/pub/infozip/zlib/</a>
                     <br />
                     Compression library.  Includes makefile for MinGW.
                  </p>
               </li>
            </ul>
         </li>
         <li>
            <h4>Other programs</h4>
            <ul>
               <li>
                  <h5>Jam</h5>
                  <p>
                     <a href="http://www.geocities.com/Tokyo/Towers/6162/gcc.html">
                     http://www.geocities.com/Tokyo/Towers/6162/gcc.html</a>
                     <br />
                     Used to build executables.
                  </p>
               </li>
               <li>
                  <h5>Midnight Commander</h5>
                  <p>
                     <a href="http://home.a-city.de/franco.bez/mc/mc.html">
                     http://home.a-city.de/franco.bez/mc/mc.html</a>
                     <br />
                     File manager/shell.
                  </p>
               </li>
               <li>
                  <h5>Perl</h5>
                  <p>
                     Programmers have reported some success in compiling
                     Perl 5.005_63.  Source for Perl is available from
                     <a href="http://www.cpan.org/src/index.html">http://www.cpan.org/src/index.html</a>
                     <br />
                     See the patch for MinGW at
                     <a href="http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/1999-12/msg00396.html">
                     http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/1999-12/msg00396.html</a>
                     <br />
                     Thanks to Brent Williams for the information regarding building Perl with MinGW.
                  </p>
               </li>
            </ul>
         </li>
      </ol>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="otherprogrammingtools" />
      <h3>Other programming tools</h3>
      <p>
         I have links to various tools throughout the FAQ such as
         in the Make, IDEs and editors, Debugging and Other resources links, but here are
         some that weren't specifically mentioned elsewhere.
      </p>
      <ol>
         <li>
            Unix style tools
            <p>
               Many users have found Win32 or DOS versions of Unix programming
               tools very helpful.  Here are some places to find ports of well-known
               Unix tools.
            </p>
            <ul>
               <li>
                  Virtually UN*X, 
                  <a href="http://virtunix.itribe.net/">http://virtunix.itribe.net/</a>
                  <br />
                  Win32 versions of many Unix tools.
               </li>
               <li>
                  Gnuish MS-DOS, 
                  <a href="ftp://ftp.simtel.net/pub/simtelnet/gnu/gnuish/">
                  ftp://ftp.simtel.net/pub/simtelnet/gnu/gnuish/</a>.
                  <br />
                  A port of many GNU tools to 16 bit DOS.
               </li>
               <li>
                  Less, 
                  <a href="http://www.flash.net/%7Emarknu/less/">http://www.flash.net/&#126;marknu/less/</a>
                  <br />
                  File filter for viewing files quickly.  Similar to DOS more program.
               </li>
               <li>
                  New Technology Shell (NTsh),
                  <a href="http://wwwcip.informatik.uni-erlangen.de/user/mnwaitz/zips/ntsh-src.zip">
                  http://wwwcip.informatik.uni-erlangen.de/user/mnwaitz/zips/ntsh-src.zip</a>
               </li>
               <li>
                  ISpell, <a href="http://fmg-www.cs.ucla.edu/geoff/ispell.html">
                  http://fmg-www.cs.ucla.edu/geoff/ispell.html</a>
                  <br />
                  Spell checker.
               </li>
               <li>
                  Ghostview, Ghostscript, <a href="http://www.cs.wisc.edu/%7Eghost/aladdin/index.html">
                  http://www.cs.wisc.edu/&#126;ghost/aladdin/index.html</a>
                  <br />
                  Postscript viewer.
               </li>
               <li>
                  Ron's Utilities, <a href="http://www.mossbayeng.com/%7Eron/vim/builds.html">
                  http://www.mossbayeng.com/&#126;ron/vim/builds.html</a>
                  <br />
                  Ports and patches for several GNU utilities to MinGW.
               </li>
               <li>
                  A Linux-like Windows, 
                  <a href="http://www.datacomm.ch/mwoog/software/linux_windows.htm">
                  http://www.datacomm.ch/mwoog/software/linux_windows.htm</a>
                  <br />
                  Links to various Win32 ports.
               </li>
            </ul>
         </li>
         <li>
            Other tools
            <p>
               For those who prefer working with tools other than those found in Unix
               environments, here are some sites to check.  If anyone else has favorite
               programming tools to add, feel free to suggest them.
            </p>
            <ul>
               <li>
                  DOS utilities, <a href="http://www.freedos.org/freedos/software/">
                  http://www.freedos.org/freedos/software/</a>
                  <br />
                  If you want utilities similar to standard MS DOS ones, check this
                  site.  It even includes a deltree version that works on Windows NT.  All
                  tools here are compiled for DOS 16 bit systems.  Source is included with most.
               </li>
            </ul> 
         </li>
      </ol>  
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="otherresources" />
      <h3>Other resources</h3>
      <p>
         If anyone has any other MinGW pages they've put together that they'd like to add,
         they can be placed here.
      </p>
      <ul>
         <li>  
            Self-hosting version of MinGW,
            <a href="ftp://ftp.franken.de/pub/win32/develop/gnuwin32/mingw32/porters/Mikey/">
            ftp://ftp.franken.de/pub/win32/develop/gnuwin32/mingw32/porters/Mikey/</a>
            <br />
            Emulates VC++ and GNU development environments for MinGW.
            <br />
            I personally recommend use of the latest versions of PDCurses (2.4) and less (346), if
            you've downloaded earlier ones.  See the Libraries and Other programming tools sections for
            links to the latest versions.
         </li>
         <li>
            Miscellaneous MinGW utilities and examples,
            <a href="ftp://ftp.xraylith.wisc.edu/pub/khan/gnu-win32/mingw32/misc/">
            ftp://ftp.xraylith.wisc.edu/pub/khan/gnu-win32/mingw32/misc/</a>
            <br />
            Includes COM, DLL and LoadLibrary examples, redir program, patch program plus more.
         </li>
         <li>
            Anders Norlander's MinGW page,
            <a href="http://www.acc.umu.se/%7Eanorland/gnu-win32/index.html">
            http://www.acc.umu.se/&#126;anorland/gnu-win32/index.html</a>
            <br />
            Includes various tools and utilities for MinGW, including reimp, pexports
            (for working with dlls) and uuidgen (for working with COM).
         </li>
         <li>
            Paul Sokolovsky's Development Page,
            <a href="http://www.is.lg.ua/%7Epaul/devel/">http://www.is.lg.ua/&#126;paul/devel/</a>
            <br />
            Various ports of libraries, alternative binutils and some tutorials on dlls.
         </li>
         <li>
            Fredos Homepage, 
            <a href="http://penguin.at0.net/%7Efredo/">http://penguin.at0.net/&#126;fredo/</a>
            <br />
            More MinGW related ports.
         </li>
         <li>
            The Code Foundry, <a href="http://www.geocities.com/SiliconValley/Station/1177/foundry.html">
            http://www.geocities.com/SiliconValley/Station/1177/foundry.html</a>
            <br />
            Win32 code including a conio library.  Other useful information on
            Win32 programming also available at this site.
         </li>
         <li>
            Command line globbing,
            <a href="http://sourceware.cygnus.com/ml/cygwin/1999-11/msg00052.html">
            http://sourceware.cygnus.com/ml/cygwin/1999-11/msg00052.html</a>
            <br />
            Bruce E. Wampler recommended this information on globbing for MinGW.
         </li>
         <li>
            UTF-8 support for windres,
            <a href="http://www.egroups.com/group/mingw32/1511.html">
            http://www.egroups.com/group/mingw32/1511.html</a>
         </li>
         <li>
            Vijay Mukhi's Technology Cornucopia,
            <a href="http://users.neca.com/vmis/">http://users.neca.com/vmis/</a>
            <br />
            Socket, COM, OLE and other programming examples.
         </li>
         <li>
            The Code Project, <a href="http://www.codeproject.com/">http://www.codeproject.com/</a>
            <br />
            Lots of code samples and some tutorials.  Unfortunately, the emphasis here is mainly 
            MFC and Visual C++, but there is some Win32 code if you look for it and the site 
            maintainers have said they'd welcome any type of programming related submissions.
         </li>
      </ul>
      <p><a href="#index">Back to index</a></p>



   </td>
   </tr>
   </table>

   <!-- Close page table -->
   </td></tr></table>

   <!--#include file="ssi/bottombar.html"-->
   <!--#include file="ssi/footer.html"-->

   <p>
      <a href="http://validator.w3.org/check?uri=http%3A%2F%2Fwww.mingw.org%2Fmingwfaq.shtml">
      <img border="0" src="vxhtml10.gif" alt="Valid XHTML 1.0!" height="31" width="88" /></a>
   </p>

   <hr />
   <address>
   <br />Last revised $Date: 2001-08-27 19:41:19 $
   </address>
</body>
</html>
