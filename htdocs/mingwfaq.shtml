<!-- $Id: mingwfaq.shtml,v 1.23 2001-08-28 01:05:44 stevedperkins Exp $ -->

<html>
<head>
   <title>MinGW FAQ</title>
   <meta name="description" content="Information about the Mingw Compiler.  Includes 
   descriptive information and questions commonly brought up on the mailing list." />
   <meta name="keywords" content="mingw, mingw32, programming, C++, C, C/C++, libraries, 
   software, development tools, editors, IDEs, GNU" />
   <meta name="content-language" content="en" />
   <style type="text/css"><!-- ol.alpha {list-style-type: upper-alpha} --></style>
   <style type="text/css"><!-- ol.romanum {list-style-type: lower-roman} --></style>
   <style type="text/css"><!-- ol {margin-top: 1em} --></style>
   <style type="text/css"><!-- ul {margin-top: 1em} --></style>
   <style type="text/css"><!-- ul {margin-bottom: 1em} --></style>
</head>
<body bgcolor="white" text="black" link="#0000EE" vlink="#551A8B" alink="red">
   <h1 align="center">MinGW FAQ</h1>

   <!-- two-column format: left sidebar and the body -->
   <table border="0" cellspacing="6" cellpadding="8">
      <tr>
         <td bgcolor="#eeeeee" valign="top" width="10%">

            <!--#include file="ssi/lsidebar.html"-->

         </td>
   <!-- 2nd column of two-column format: the body -->
         <td valign="top">

   <!-- ================================================================== -->
   <!--                                                                    -->
   <!--			  Main Body                                     -->
   <!--                                                                    -->

<table border="0" cellspacing="6" cellpadding="0">
<tr>
<td valign="top" align="left">
   <p>
      If you have any further questions, please refer them to the
      <a href="mailto:mingw-users@lists.sourceforge.net"> MinGW mailing list</a>.
      This page is updated by the MinGW Developers as time permits.  The
      Q&A provided here were obtained from the MinGW mailing list,
      its members, various MinGW related web sites and experience.  We would like to
      thank all who have contributed to this FAQ.
   </p>
   <p>
      <b>**NOTE**</b> We are currently in the process of assimilating the 
      <a href="mingw-oldfaq.shtml">"Old FAQ"</a> contents into this consolidated 
      FAQ.  Information currently residing on the Old FAQ page will soon find a home 
      either here, on the "Documentation" and "Download" pages, or in the upcoming
      <i>MinGW User's Guide</i>.
   </p>
   
   <a name="index"></a>
   <ul>
      <li><a href="#faq-what">What is MinGW?</a></li>
      <li><a href="#faq-where">Where can I get MinGW?</a></li>
      <li><a href="#faq-license">How is MinGW licensed?</a></li>
      <li><a href="#faq-version">What is the current version?</a></li>
      <li><a href="#faq-usingolderversions">Can I use older versions?</a></li>
      <li><a href="#faq-usingwithcygwin">How can I use MinGW within a Cygwin environment?</a></li>
      <li><a href="#faq-runtime">Which runtime should I use?</a></li>
      <li><a href="#faq-w32api">What is w32api?</a></li>
      <li><a href="#faq-comsupport">Is support provided for COM?</a></li>
      <li><a href="#faq-cross">How can I build a cross compiler?</a></li>
      <li><a href="#faq-bugreports">How can I report bugs?</a></li>
   <!-- 
   The following section commented out 8/20/2001 by Steve D. Perkins
   If the FAQ becomes too large and unwieldy, why don't we just break it into 
   chunks based on logical subsections... rather than creating a confusing setup 
   of "new faq" and "old faq", with neither being maintained?
     <li><a name="i-oldfaq"	href="#faq-oldfaq">	What happened to the old FAQ?</a></li>
   -->
   </ul>

   <hr />

      <a name="faq-what" />
      <h3>What is MinGW?</h3>
      <p>
         MinGW ("Minimalistic GNU for Windows") refers to a set of runtime headers, used in building 
         a compiler system based on the GNU GCC and binutils projects.  It compiles and links code 
         to be run on Win32 platforms... providing C, C++ and Fortran compilers plus other related 
         tools.  If you see references to "mingw32" instead of "MinGW", they are referring to the 
         same compiler system. The project's name 
         changed from mingw32 to MinGW is to prevent the implication that MinGW will only 
         works on 32 bit systems (as 64 and higher bit machines become more common, MinGW 
         will evolve to work with them).  MinGW uses the Microsoft runtime libraries, distributed 
         with the Windows operating system. Unlike other ports of GCC to Windows, the 
         runtime libraries are not distributed using Gnu's General Public License (GPL). You, 
         therefore, do not have to distribute your source code with your programs. 
      </p>
      <p>
         The project was originally started by Colin Peters, who created headers and import 
         definitions for Microsoft's crtdll C runtime in an effort to remove the dependancy of 
         the Cygwin1.dll from applications built by Cygwin's implemtation of GCC.  It is that 
         set of headers and import definitions that constitute what MinGW is and is interchangeably 
         refered to as the MinGW runtime.  
      </p>
      <p>
         The MinGW runtime was used to create a port of GCC and binutils
         to the Win32 platform and to create native binaries for it.  These ports
         have commonly been mistaken for MinGW itself... in reality these ports are
         just using MinGW.  However, the distinction is growing increasingly blurred as the project 
         migrates from a collection of indivual packages to a single-file versioned distribution. 
         The MinGW team will continue to port these utilities and bundle them 
         with the archived distribution as new releases of the utilities are created.  It is our hope 
         that the source code base for these utilities incorporate our work so that we don't
         have to continually apply our patches.  
      </p>
      <p>
         Colin maintains a website about MinGW at 
         <a href="http://www.geocities.com/Tokyo/Towers/6162/gcc.html" target="_nw">
         http://www.geocities.com/Tokyo/Towers/6162/gcc.html</a> which lists some interesting 
         details you won't find here.  Other history details can be found on our 
         <a href="history.shtml">history</a> page.  The MinGW project was eventually taken over 
         by Mumit Khan, and is now maintained by a group of developers through the 
         <a href="http://sourceforge.net/projects/mingw/">SourceForge</a> web site.
         We have a few developers working in their spare time with no corporate
         funding in the project.  If you would like to volunteer please let us know
         via email to the <a href="mailto:mingw-users@sourceforge.net">MinGW mail list</a>
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="faq-where" />
      <h3>Where can I get MinGW?</h3>
      <p>
         Initially, MinGW was an assortment of individual packages... the MinGW runtime, various 
         applications built using that runtime (gcc, ld, etc.), and other useful components (the 
         w32api headers needed to code for the Win32 API).  Developers "rolled their own" 
         MinGW environments by downloading the latest versions of each individual package needed.
         This was necessary given the dynamic nature of early package versions (updates being 
         posted constantly)... but was oftentimes confusing for newbies, and made it difficult for 
         application/library vendors to design products that build with a "standard" MinGW 
         environment.
      </p> 
      <p>
         Therefore, around mid-2001 when development had matured and updates were not being 
         packaged as rapidly, the decision was made to create a single-file distribution of the 
         standard MinGW environment.  This single archive contains the files from each component 
         package, bundled and ready to extract.  The individual component packages are still 
         available for download... if a particular package is updated in between releases of the 
         overall distribution, it's possible to simply drop the newer package in place over a 
         distribution install.
      </p>
      <p>
         MinGW files are hosted by SourceForge.  For more information and links to download, visit 
         the <a href="download.shtml">Download</a> page.
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />




      <a name="faq-license" />
      <h3>How is MinGW licensed?</h3>
      <p>
         When Colin Peters released the MinGW runtime he placed the source into the
         public domain.  No one owns a copyright (C) to the source because of this.
         You as a software manufacturer are free to use the MinGW runtime in your
         proprietary and OpenSource software as you see fit.  The only thing you can't
         do is to claim ownership of the source and use Colin Peters' name, the MinGW
         name or the name of any of it's contributors in endorsement of any product.
      </p>
      <p>
         For those interested in the actual legal details and technical
         points regarding copyright of the MinGW compiler system, copyright
         information is included in the headers and the source files of the
         compiler distribution package.
         The following also applies:
      </p>
      <ul>
         <li>
            The MinGW basic runtime system, which is basically the glue
            to the underlying operating system, is completely in the public
            domain.  The runtime system includes MinGW headers (such as stdio.h),
            libraries (such as libmingw32.a) and import libraries for
            CRTDLL/MSVCRT.
         </li>
         <li>
            W32API, which consists of the headers and import libraries related to
            WIN32 API access, is released under
            <a href="http://www.acc.umu.se/%7Eanorland/gnu-win32/README.w32api">copyright</a>.  
            The copyright agreement states no restrictions are placed on programs or object 
            files compiled with the library.  There are restrictions if you wish to 
            distribute the library as part of another package.
         </li>
         <li>
            Mingw development tools, which include compilers, linkers, other
            tools in the bin directory, etc., are released under the
            GNU General Public License.
         </li>
         <li>
            Profiled code, which is code compiled and linked with the
            <code>-pg</code> option for runtime
            profiling, also falls under the GNU General Public License.
         </li>
      </ul>
      <p>
         Here are some further reference sources for the various
         licenses that apply to pieces of the MinGW distribution:
      </p>
      <ul>
         <li>
            GNU General Public License,
            <a href="http://www.gnu.org/copyleft/gpl.html">http://www.gnu.org/copyleft/gpl.html</a>
         </li>
         <li>GNU Library General Public License,
            <a href="http://www.gnu.org/copyleft/lgpl.html">http://www.gnu.org/copyleft/lgpl.html</a>
         </li>
         <li>
            For more information on the copyleft concept,
            <a href="http://www.gnu.org/copyleft/">http://www.gnu.org/copyleft/</a>
         </li>
      </ul>
      <p><a href="#index">Back to index</a></p>

      <hr />




      <a name="faq-version" />
      <h3>What is the current version?</h3>
      <p>
         The current version of the MinGW environment distribution is 1.0.1, released on 
         July 26, 2001.  This version number and last release data are to the individual 
         MinGW runtime package, upon which the applications in the overall distribution 
         are built.  It is likely that these will stay in sync going forward (new versions 
         of the overall distribution being released as the core runtime is updated).
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />




      <a name="faq-usingolderversions">
      <h3>Can I use older versions?</h3></a>
      <p>
         It's highly recommended that you use the latest version of
         MinGW.  Older versions may have more bugs and can
         be more difficult to install or use than the latest version.  
         Please be sure that you have downloaded and are working with the
         latest version, especially if you are having any difficulties with
         installation or use.  If you are not sure of your version, you can
         type <code>gcc -dumpversion</code> to find out what you are
         using.  
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />



      
      <a name="faq-usingwithcygwin" />
      <h3>How can I use MinGW within a Cygwin environment?</h3>
      <p>
         <a href="http://sources.redhat.com/cygwin">Cygwin</a> refers to a GPL'ed 
         implementation of a POSIX emulation layer for the Win32 platform (POSIX being 
         a standard specification for certain OS services within the UNIX world).  
         This POSIX emulation layer makes it easier to port applications from UNIX 
         to Win32... and as a result, Cygwin has grown over the years into a full 
         bash shell environment with all the familiar tools a UNIX developer would 
         work with.  Cygwin allows developers to work on a Win32 machine, and feel 
         as if they're developing on a UNIX box.
      </p>
      <p>
         However, there is a downside to Cygwin (which MinGW was created to address).  
         All executables built by Cygwin's port of GCC have a dependency on the 
         Cygwin DLL, which provides the POSIX emulation layer to applications.  In 
         addition to decreasing the execution speed of apps, the fact that 
         all applications have a dependency on a GPL'ed component means that 
         <b><i>ALL</i></b> applications built with Cygwin's GCC are legally bound 
         by the GPL as well!
      </p>
      <p>
         There is command-line option that can be passed to Cygwin's GCC, "-mno-cygwin", 
         that was intended to address these concerns.  When Cygwin's GCC is invoked with 
         the "-mno-cygwin" option, executables are built without a dependency on the 
         Cygwin DLL.  Instead, the "-mno-cygwin" option instructs GCC to use the MinGW 
         headers and libraries (which must be located in a particular location within 
         the Cygwin directory structure).  However, support for "-mno-cygwin" has 
         been weak and flaky... the location at which it searches for MinGW headers 
         has changed a time or two (with poor documentation), bugs have crept in, and 
         maintainence of the option has NOT be a priority in development.  There is a
         distinct possibility that "-mno-cygwin" will become depreciated in future 
         releases of Cygwin.
      </p>
      <p>
         For those who would like to use a Cygwin environment for development, yet 
         generate non-Cygwin-dependant executables, a much easier option to 
         "-mno-cygwin" exists.  Simply install Cygwin and the MinGW distribution 
         in seperate directories (i.e. "C:\CYGWIN" and "C:\MINGW"), and make sure 
         that the "/bin" subdirectory beneath your MinGW installation comes before 
         Cygwin's "/bin" subdirectory in your PATH environment variable
         (i.e. "PATH=%PATH%;C:\MINGW\BIN;C:\CYGWIN\BIN").  This will allow you access 
         to all the UNIX tools you want, while ensuring that the instance of GCC used 
         is the MinGW version.
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />




      <a name="faq-runtime" />
      <h3>Which runtime should I use?</h3>
      <p>
         MinGW requires you to have the Microsoft runtime library MSVCRT.DLL on your
         system (Windows 95 OSR2, NT 4.0, and later versions of both OS families).  Support 
         for CRTDLL.DLL (Win32s, used by Windows 3.11 and NT 3.5) is no 
         longer being maintained.  The CRTDLL legacy code will remain for some time but 
         will not be guaranteed to be present in future releases.  The only problem you 
         may have is that if you try to use a program built with MSVCRT.DLL on a Windows 
         95 Release 1 system.  On  these systems the MSVCRT.DLL wasn't present, however, 
         it is freely available from 
         <a href="http://www.microsoft.com" target="_nw">http://www.microsoft.com</a>.
      <p>
         Other runtime libraries are usable with MinGW... one such library in the works 
         is PW32, the Posix-over-Win32 layer. It provides a subset of POSIX and UNIX functions. 
         To find out more about PW32, try it out, or volunteer to help... see 
         <a href=http://pw32.sourceforge.net/">http://pw32.sourceforge.net</a>. 
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />




      <a name="faq-w32api" />
      <h3>What is w32api?</h3>
      <p>
         The w32api is the package of headers and import libraries to support the
         Win32 Application Programming Interface as created by Microsoft.  The MinGW
         development team are the current maintainers of the w32api since without
         that package Windows Programming would not be possible.  The package was
         created by Anders Norlander and it's license is also non-restrictive.  For
         more information see Anders' README file 
         <a href="http://www.acc.umu.se/%7Eanorland/gnu-win32/README.w32api" 
         target="_nw"> README.w32api</a>.  
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="faq-comsupport" />
      <h3>Is support provided for COM?</h3>
      <p>
         MinGW has some support for COM programs.  Programmers have had
         much better luck writing COM applications in C than C++.  Work is in
         progress to improve support.  Check the MinGW mailing list archives
         for more details on COM and more links to example files.
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="faq-cross" />
      <h3>How can I build a cross compiler?</h3>
      <p>
         Cross-compiling refers to building applications for one platform, with development 
         occuring on another platfrom (i.e. compiling MS-Windows executables from within a Linux 
         environment, or vice-versa).  As GCC is found on literally dozens of platforms, it 
         is theoretically possible to use the MinGW runtime in creating a cross-compilation 
         development environment in many scenerios.
      </p>
      <p>
         There is a very old out-of-date 
         <a href="http://www.nanotech.wisc.edu/%7Ekhan/software/gnu-win32/mingw-cross-howto.txt" 
         target="_nw">mingw-cross-howto.txt</a> written by Mumit Khan and stored
         on his site you can use.  You'll have to update the packages.  This needs
         to be rewritten, any volunteers?  If so, please speak up in the 
         <a href="mailto:mingw-users@lists.sourceforge.net">mingw-users</a> list.
      </p>
      <p>
         A more upto date HOWTO complete with a script to configure it for you can
         be found at <a href="http://www.devolution.com/~slouken/SDL/Xmingw32/crossgcc/index.html" 
         target="_nw">http://www.devolution.com/~slouken/SDL/Xmingw32/crossgcc/index.html</a>.
      </p>
      <p>
         You'll want to visit the <a href="mailto:crossgcc@sources.redhat.com">crossgcc</a> 
         mail list <a href="http://sources.redhat.com/ml/crossgcc/">archives</a>.  You'll also 
         find a link to a crossgcc FAQ and another for an ftp download site of some useful scripts 
         on the <a href="http://sources.redhat.com/ml/crossgcc/">archives</a> search page.
      </p>
      <p>
         There are also some pre-built versions:
         <ul>
            <li>
               Linux: 
               <a href="http://www.devolution.com/~slouken/SDL/Xmingw32/mingw32-linux-x86-glibc-2.1.tar.gz">
               mingw32-linux-x86-glibc-2.1.tar.gz</a>
            </li>
            <li>If you know of others let us know.</li>
         </ul>
      </p>
      <p><a href="#index">Back to index</a></p>

      <hr />



      <a name="faq-bugreports" />
      <h3>How can I report bugs?</h3>
      <p>
         When sending in a bug report, please be sure to send a short example of the problem.  
         If the problem cannot be recreated, it cannot be debugged.  You can now report bugs 
         through the <a href="http://sourceforge.net/tracker/?atid=102435&group_id=2435&func=browse">
         defect tracking tool</a> at SourceForge.  You can also bring problems up on the 
         MinGW <a href="lists.shtml">mailing list</a>.
      </p>
      <p><a href="#index">Back to index</a></p>


   </td>
   </tr>
   </table>

   <!-- Close page table -->
   </td></tr></table>

   <!--#include file="ssi/bottombar.html"-->
   <!--#include file="ssi/footer.html"-->

   <hr />
   <address>
   <br />Last revised $Date: 2001-08-28 01:05:44 $
   </address>

</body>
</html>
