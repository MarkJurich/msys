# Master Makefile for man, apropos, whatis, and makewhatis
# Source: Makefile.in -- processed by configure, to create Makefile.
#
# Copyright (C) 1990, 1991, John W. Eaton.
# Copyright (C) 1994-2001, Andries E. Brouwer
# Copyright (C) 2005-2008, Keith D. Marshall
#   <keithmarshall@users.sourceforge.net>
#
# This file is part of the man package.
#
# man is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2, or (at your option) any later version.
#
# man is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with man; see the file COPYING.  If not, write to the Free Software
# Foundation, 51 Franklin St - Fifth Floor, Boston, MA 02110-1301, USA.
#
# various changes - aeb, March 1994
# use of catalogs - aeb, June 1994
# autoconf hooks  - kdm, May 2005
# VPATH support   - kdm, June 2005

# Package identification.
package = @PACKAGE_NAME@
version = @PACKAGE_VERSION@

# To allow building in a separate build directory,
# (when the "make" program in use supports the VPATH capability),
# set up the srcdir mapping to VPATH.
srcdir = @srcdir@
VPATH = ${srcdir}

# Other autoconf specified directory references.
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@
sbindir = @sbindir@
bindir = @bindir@

prefix = @prefix@
exec_prefix = @exec_prefix@

# Compiler and installer.
CC = @CC@
INSTALL = @INSTALL@

# Platform dependent file name extensions.
EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@

pager = @pager@

CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
DEFS = @DEFS@ $(INCLUDES)
GREPSILENT = -DGREPSILENT='"@man_grepsilent@"'
CWARNNP = @CWARNNP@
CWARN = @CWARN@

INCLUDES = -I. -I${srcdir} -I${top_builddir}
WIN32LIBS = @WIN32LIBS@

LIBS = @LIBS@

.c.$(OBJEXT):
	$(CC) -c $(CWARN) $(CFLAGS) $(DEFS) $<

all: man$(EXEEXT) man.conf apropos whatis makewhatis

MANOBJS = \
  man.$(OBJEXT) manfile.$(OBJEXT) manpath.$(OBJEXT) \
  man-config.$(OBJEXT) man-getopt.$(OBJEXT) man-iconv.$(OBJEXT) \
  to_cat.$(OBJEXT) different.$(OBJEXT) gripes.$(OBJEXT) \
  glob.$(OBJEXT) util.$(OBJEXT) msg.$(OBJEXT)

WIN32LIBOBJS = winposix.$(OBJEXT) wincmds.$(OBJEXT) winlang.$(OBJEXT) \
  spawnlp.$(OBJEXT) spawnvp.$(OBJEXT) quotearg.$(OBJEXT)

win32/libexec.a: FORCE
	@cd win32; $(MAKE) LIBOBJECTS='$(WIN32LIBOBJS)'

stamp.h: paths.h man.conf
	for f in $?; \
	  do sed \
	      -e 's,$${prefix},${prefix},g' \
	      -e 's,$${bindir},${bindir},g' \
	      -e ':loop' \
	      -e   '/__undef__(\([^)]*\))/{' \
	      -e   's//\1/' -e 's/^#* */# /' \
	      -e   'b loop' \
	      -e '}' $$f > $@ && { rm -f $$f; \
	     mv $@ $$f; } \
	  done
	echo timestamp > $@

man$(EXEEXT): $(MANOBJS) $(WIN32LIBS)
	$(CC) $(LDFLAGS) -o $@ $(MANOBJS) $(WIN32LIBS) $(LIBS)

man.$(OBJEXT): man.c
	$(CC) -c $(CWARN) $(CFLAGS) $(DEFS) $(GREPSILENT) ${srcdir}/man.c

msg.c gripedefs.h: ${top_srcdir}/msgs/mess.en ${top_builddir}/tools/makemsg
	${top_builddir}/tools/makemsg ${top_srcdir}/msgs/mess.en gripedefs.h msg.c

# glob.c does not have prototypes
glob.$(OBJEXT): glob.c ndir.h
	$(CC) -c $(CWARNNP) $(CFLAGS) $(DEFS) ${srcdir}/glob.c

man-config.$(OBJEXT) man-getopt.$(OBJEXT) man.$(OBJEXT) manpath.$(OBJEXT) \
to_cat.$(OBJEXT): defs.h

different.$(OBJEXT) man.$(OBJEXT): different.h

man.$(OBJEXT) manfile.$(OBJEXT): glob.h

different.$(OBJEXT) gripes.$(OBJEXT) man-config.$(OBJEXT) man-getopt.$(OBJEXT) \
man.$(OBJEXT) manfile.$(OBJEXT) manpath.$(OBJEXT) util.$(OBJEXT): gripes.h gripedefs.h

different.$(OBJEXT) man-config.$(OBJEXT) man-getopt.$(OBJEXT) \
man.$(OBJEXT) manpath.$(OBJEXT): man-config.h

gripes.$(OBJEXT) man-config.$(OBJEXT) man-getopt.$(OBJEXT) \
man.$(OBJEXT) manpath.$(OBJEXT) util.$(OBJEXT): man.h

man-getopt.$(OBJEXT) man.$(OBJEXT) manpath.$(OBJEXT): man-getopt.h

man.$(OBJEXT) manfile.$(OBJEXT) to_cat.$(OBJEXT): manfile.h

man.$(OBJEXT) man-iconv.$(OBJEXT): man-iconv.h

man.$(OBJEXT) manpath.$(OBJEXT): manpath.h

man-config.$(OBJEXT): stamp.h

different.$(OBJEXT) man-config.$(OBJEXT) man-getopt.$(OBJEXT) \
man.$(OBJEXT) manpath.$(OBJEXT) util.$(OBJEXT): util.h

man-getopt.$(OBJEXT): version.h

msg.$(OBJEXT): msg.c

gripes.$(OBJEXT): ${top_srcdir}/catopen/catopen.c

man.conf: man.conf.in $(config_sed)
	sed -f ${top_builddir}/config.sed ${srcdir}/man.conf.in > man.conf

version.h: ${top_srcdir}/configure.ac Makefile
	echo 'static char version[] = "$(version)";' > version.h

apropos: apropos.sh Makefile
	rm -f apropos
	sed -e 's,%apropos_or_whatis%,apropos,' \
	    -e 's,%version%,$(package)-$(version),' \
	    -e 's,%manpathoption%,@manpathoption@,' \
	    -e 's,%path_separator_char%,@path_separator_char@,' \
	    -e 's,%grepsilent%,@man_grepsilent@,' \
		${srcdir}/apropos.sh > apropos
	chmod +x apropos

whatis: apropos.sh Makefile
	rm -f whatis
	sed -e 's,%apropos_or_whatis%,whatis,' \
	    -e 's,%version%,$(package)-$(version),' \
	    -e 's,%manpathoption%,@manpathoption@,' \
	    -e 's,%path_separator_char%,@path_separator_char@,' \
	    -e 's,%grepsilent%,@man_grepsilent@,' \
		${srcdir}/apropos.sh > whatis
	chmod +x whatis

makewhatis: makewhatis.sh Makefile
	rm -f makewhatis
	sed -e 's,%version%,$(package)-$(version),' \
	    -e 's,%awk%,@awk@,' ${srcdir}/makewhatis.sh > makewhatis
	chmod +x makewhatis

# Some users like to specify `make DESTDIR=/some/path install',
# so set up some convenience macros to support this in `install' rules ONLY.
#
dest_prefix = ${DESTDIR}${prefix}
exec_destdir = ${DESTDIR}${exec_prefix}
bin_destdir = ${DESTDIR}${bindir}
sbin_destdir = ${DESTDIR}${sbindir}
#
manconfdir = `echo $(manconffile) | sed s'?/*[^/]\+/*$$??'`
manconffile = ${DESTDIR}@man_config_file@
#
MKINSTALLDIRS = ${top_srcdir}/mkinstalldirs

install: all apropos whatis makewhatis
	test -z "${DESTDIR}" || $(MKINSTALLDIRS) ${dest_prefix} ${exec_destdir}
	$(MKINSTALLDIRS) --require ${exec_destdir} ${bin_destdir} ${sbin_destdir}
	$(INSTALL) @man_install_flags@ man$(EXEEXT) ${bin_destdir}/man$(EXEEXT)
	$(INSTALL) -m 755 apropos ${bin_destdir}/apropos
	$(INSTALL) -m 755 whatis ${bin_destdir}/whatis
	$(INSTALL) -m 755 ${srcdir}/man2dvi ${bin_destdir}/man2dvi
	$(INSTALL) -m 754 makewhatis ${sbin_destdir}/makewhatis
	$(MKINSTALLDIRS) --require ${dest_prefix} ${manconfdir}
	test ! -f ${manconffile} || mv ${manconffile} ${manconffile}.orig
	$(INSTALL) -m 644 man.conf ${manconffile}

CLEANFILES = *.$(OBJEXT) *~ core man$(EXEEXT) apropos whatis makewhatis *.stackdump
DISTCLEANFILES = Makefile stamp.h paths.h version.h man.conf gripedefs.h msg.c mess.*.cat

clean:
	rm -f $(CLEANFILES)
	test -z "$(EXEEXT)" || rm -f *$(EXEEXT)
	@cd win32; $(MAKE) clean

distclean realclean spotless:
	rm -f $(CLEANFILES) *.orig *.rej $(DISTCLEANFILES)
	test -z "$(EXEEXT)" || rm -f *$(EXEEXT)
	@cd win32; $(MAKE) distclean

FORCE:

# $RCSfile: Makefile.in,v $: end of file -- vim: ft=make
